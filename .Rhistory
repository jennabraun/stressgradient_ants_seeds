#526 put out
seed2023 <- filter(seed2023, ending.weight != "disturbed")
seed2023 <- filter(seed2023, ending.weight != "broken")
seed2023 <- filter(seed2023, ending.weight != "was never put out")
seed2023 <- dplyr::select(seed2023, 1:7)
seed2024 <- read.csv("Raw Data/seedsrates2024.csv")
seed2024 <- filter(seed2024, ending.weight != "disturbed")
seed2024 <- filter(seed2024, ending.weight != "not put out" & ending.weight != "never put out")
seed2024$Site <- gsub("yucca", "HOM", seed2024$Site)
seeds <- rbind(seed2023, seed2024)
seeds$ending.weight <- as.numeric(seeds$ending.weight)
unique(seeds$Size)
seeds$Size <- gsub(" ", "", seeds$Size)
seeds$Size <- gsub("medium", "med", seeds$Size)
seeds$Year <- as.factor(seeds$Year)
seeds$Site <- gsub(" ", "", seeds$Site)
ndvi$Year <- as.factor(ndvi$Year)
ndvi <- unique(ndvi)
ndvi <- filter(ndvi, Season == "spring")
seeds$Site <- gsub("YuccaGrove", "Yucca", seeds$Site)
seeds$Site <- gsub("Cuyama1", "Cuyama 1", seeds$Site)
seeds$Site <- gsub("Cuyama2", "Cuyama 2", seeds$Site)
seeds <- left_join(seeds, ndvi, by = c("Site", "Year"))
seeds <- unique(seeds)
seeds <- left_join(seeds, precip, by = c("Site", "Year"))
# Chunk 6
arth2 <- read.csv("Raw Data/pitfall_arth.csv")
ants <- dplyr::filter(arth2, Family == "Formicidae")
sum(ants$count)
unique(ants$Site)
unique(ants$Year)
ants <- filter(ants, Species != "alate")
ants <- filter(ants, Species != "alata")
ants <- filter(ants, Species != "damaged")
ants <- filter(ants, Genus != "damaged")
ants <- filter(ants, Species != "alate/queen")
ants$Genus <- gsub(" ", "", ants$Genus)
sp <- ants %>% group_by(Genus, Species) %>% summarize(sum(count))
write.csv(sp, "clean Data/ants_species.csv")
write.csv(ants, "clean Data/ants_only.csv")
ants <- dplyr::select(ants, 1:5, 11)
#make wide
str(ants)
ants <- ants %>% group_by(Year, Season, Site, label, Species) %>% summarize(abun = sum(count))
ants_wide <- pivot_wider(ants, names_from = Species, values_from = abun)
ants_wide[is.na(ants_wide)] <- 0
envants <- dplyr::select(ants_wide, 1:4)
commants <- ants_wide %>% ungroup() %>% dplyr::select(5:29)
richness <- specnumber(commants)
abun <- rowSums(commants)
envants$rich <- richness
envants$abun <- abun
envants <- envants %>% separate(label, into = c("Microsite", "rep"), sep = 1)
envants$Microsite <- gsub("S", "shrub", envants$Microsite)
envants$Microsite <- gsub("O", "open", envants$Microsite)
envants$Year <- as.factor(envants$Year)
#need empty pitfalls to fill in zeroes
reps <- read.csv("Raw Data/reps.csv")
pitsreps <- filter(reps, Pit == "y")
pitsreps$year <- as.factor(pitsreps$year)
pitsreps$Rep <- as.character(pitsreps$Rep)
ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))
ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))
ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))
ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0
reps %>% group_by(Pit) %>% summarise(n())
str(reps)
# Chunk 7
atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)
unique(atraits$ant.species)
unique(atraits$site)
atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))
atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)
unique(ants$Site)
#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)
tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)
tr_wide[is.na(tr_wide)] <- 0
tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(65, 5:64)
#make a vector of the row names and remove the first value
tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]
names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]
row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))
#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885
atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names
setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(df)
str(atraits)
rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names
func.ants <- dbFD(atraits, df, w.abun = TRUE)
cwmants <- cbind(tr.names, func.ants$CWM)
cwmants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmants$tr.names)
cwmants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmants$tr.names)
#make the labels match and join back to trap data
cwmants <- separate(cwmants, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")
cwmants <- separate(cwmants, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmants$Microsite <- gsub("S", "shrub", cwmants$Microsite)
cwmants$Microsite <- gsub("O", "open", cwmants$Microsite)
cwmants$Site <- gsub("Cuyama1", "Cuyama 1", cwmants$Site)
cwmants$Site <- gsub("Cuyama2", "Cuyama 2", cwmants$Site)
# Chunk 8
commgran <- ants_wide %>% ungroup() %>% dplyr::select(5:29)
sp <- read.csv("Raw data/ants_species.csv")
sp <- filter(sp, class != "other")
sp <- sp$Species
names.use <- names(commgran)[(names(commgran) %in% sp)]
df.subset <- commgran[, names.use]
commgran <- df.subset
gr.richness <- specnumber(commgran)
gr.abun <- rowSums(commgran)
envants$rich <- richness
envants$abun <- abun
envants$gr.richness <- gr.richness
envants$gr.abun <- gr.abun
#need empty pitfalls to fill in zeroes
ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))
ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))
ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))
ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0
ptsreps$gr.richness[is.na(ptsreps$gr.richness)] <- 0
ptsreps$gr.abun[is.na(ptsreps$gr.abun)] <- 0
# Chunk 9
#reorder ants data
tr_wide <- ants
tr <- filter(ants, Species %in% sp)
tr_wide <- tr
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)
tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)
tr_wide[is.na(tr_wide)] <- 0
tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(42, 5:41)
#make a vector of the row names and remove the first value
tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]
atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)
atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))
atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- filter(atraits, ant.species %in% names.use)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)
unique(ants$Site)
names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]
row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))
atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names
setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))
rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names
func.gran <- dbFD(atraits, df, w.abun = TRUE)
cwmgran <- cbind(tr.names, func.gran$CWM)
cwmgran$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmgran$tr.names)
cwmgran$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmgran$tr.names)
#make the labels match and join back to trap data
cwmgran <- separate(cwmgran, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")
cwmgran <- separate(cwmgran, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmgran$Microsite <- gsub("S", "shrub", cwmgran$Microsite)
cwmgran$Microsite <- gsub("O", "open", cwmgran$Microsite)
cwmgran$Site <- gsub("Cuyama1", "Cuyama 1", cwmgran$Site)
cwmgran$Site <- gsub("Cuyama2", "Cuyama 2", cwmgran$Site)
# Chunk 10
atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)
atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))
atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)
#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())
#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)
tr_wide <- tr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
tr_wide$Year <- as.factor(tr_wide$Year)
tr_wide <- left_join(tr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))
tr_wide <- mutate(tr_wide, occ = site.total/pit.count)
tr_wide <- select(tr_wide, 1:4, 7)
tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = occ)
tr_wide[is.na(tr_wide)] <- 0
tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(64, 4:63)
#make a vector of the row names and remove the first value
tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]
names(tr_wide) <- gsub(" ", "", names(tr_wide))
names.use <- names(tr_wide)[(names(tr_wide) %in% row.names(atraits$species.site))]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]
tr_wide <- tr_wide[,order(names(tr_wide))]
tr_wide <- select(tr_wide, -LeptothoraxHOM)
row.names(atraits)
names(tr_wide)
#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885
atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names
setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(tr_wide))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(tr_wide)
colnames(tr_wide) == rownames(atraits)
names <- seq(1:59)
names2 <- colnames(tr_wide)
identical(names, names2)
row.names(atraits) <- names
names(tr_wide) <- names
setdiff(names, names2)
#set them to numbers
func.ants.site <- dbFD(atraits, tr_wide, w.abun = TRUE)
#
#
#
#
#
#
cwm.ants <- func.ants.site$CWM
cwm.ants <- cbind(tr.names, cwm.ants)
cwm.ants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.ants$tr.names)
cwm.ants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.ants$tr.names)
cwm.ants <- separate(cwm.ants, col = 1, into = c("year", "season", "Site"), sep = " ")
cwm.ants$Site <- gsub("Cuyama1", "Cuyama 1", cwm.ants$Site)
cwm.ants$Site <- gsub("Cuyama2", "Cuyama 2", cwm.ants$Site)
# Chunk 11
#need to filter out species to just the granivores
gtraits <- read.csv("Raw Data/anttraits.csv")
gtraits <- mutate(gtraits, r.mand = mandible/webers)
gtraits <- gtraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))
gtraits$species.site <- paste(gtraits$ant.species, gtraits$site)
gtraits <- filter(gtraits, ant.species %in% sp)
gtraits <- ungroup(gtraits) %>% dplyr::select(5, 3, 4)
#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())
#reorder ants data
tr <- filter(ants, Species %in% sp)
gr_wide <- tr
gr_wide$species.site <- paste(gr_wide$Species, gr_wide$Site)
gr_wide <- gr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
gr_wide <- dplyr::select(gr_wide, 1:4, 7, 8)
gr_wide <- gr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
gr_wide$Year <- as.factor(gr_wide$Year)
gr_wide <- left_join(gr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))
gr_wide <- mutate(gr_wide, occ = site.total/pit.count)
gr_wide <- select(gr_wide, 1:4, 7)
gr_wide <- pivot_wider(gr_wide, names_from = species.site, values_from = occ)
gr_wide[is.na(gr_wide)] <- 0
gr_wide$ID <- paste(gr_wide$Year, gr_wide$Season, gr_wide$Site)
gr_wide <- gr_wide %>% ungroup() %>% dplyr::select(41, 4:40)
#make a vector of the row names and remove the first value
tr.names <- gr_wide$ID
gr_wide <- gr_wide[,-1]
names(gr_wide) <- gsub(" ", "", names(gr_wide))
gtraits <- gtraits[order(gtraits$species.site),]
gr_wide <- gr_wide[,order(names(gr_wide))]
#gr_wide <- select(gr_wide, -LeptothoraxHOM)
atr.names <- gtraits$species.site
atr.names <- gsub(" ", "", atr.names)
row.names(gtraits) <- atr.names
row.names(gtraits)
names(gr_wide)
gtraits <- gtraits[,2:3]
identical(row.names(gtraits), colnames(gr_wide))
names <- seq(1:37)
row.names(gtraits) <- names
names(gr_wide) <- names
#set them to numbers
func.gran.site <- dbFD(gtraits, gr_wide, w.abun = TRUE)
cwm.gran.sites <- func.gran.site$CWM
cwm.gran.sites <- cbind(tr.names, cwm.gran.sites)
#cwm.gran.sites <- cwm.gran.sites[,-2]
cwm.gran.sites$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.gran.sites$tr.names)
cwm.gran.sites$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.gran.sites$tr.names)
cwm.gran.sites <- separate(cwm.gran.sites, col = 1, into = c("year", "season", "Site"), sep = " ")
cwm.gran.sites$Site <- gsub("Cuyama1", "Cuyama 1", cwm.gran.sites$Site)
cwm.gran.sites$Site <- gsub("Cuyama2", "Cuyama 2", cwm.gran.sites$Site)
mean(cwm.ants$webers)
mean(cwm.gran.sites$webers)
identical(cwm.ants$webers, cwm.gran.sites$webers)
# Chunk 12
sites <- sites %>% mutate(arid = MAP/(MAT + 10))
sites$Year <- as.factor(sites$Year)
plt.ag <- left_join(plt.ag, sites, by = c("Site", "Year"))
plt.ag <- left_join(plt.ag, precip, by = c("Site", "Year"))
#combine pits into means for adding to the dispersal models
mn.ants <- ptsreps %>% group_by(Site, season, year) %>% summarize(mn.abun.ants = mean(abun), mn.rich.ants = mean(rich), mn.gr.abun = mean(gr.abun), mn.gr.rich = mean(gr.richness))
# Chunk 13
#plt.ag is the main plant dataset
plt.ag <- left_join(plt.ag, filter(cwm.ants, season == "spring"), by = c("Site", "Year" = "year"))
plt.ag <- left_join(plt.ag, filter(cwm.gran.sites, season == "spring"), by = c("Site", "Year" = "year"))
plt.ag <- rename(plt.ag, gr.webers = webers.y, gr.rmand = r.mand.y)
##joining up the pitfall trap data
ptsreps <- left_join(ptsreps, cwmants, by = c("year", "Site", "season", "Microsite", "Rep"))
ptsreps <- select(ptsreps, -X, -Season, shrub.species)
pts <- left_join(ptsreps, mn.plt, by = c("year" = "Year", "Site"))
pts <- left_join(pts, cwmgran, by = c("year", "Site", "season", "Microsite", "Rep"))
pts <- rename(pts, gr.webers = webers.y, gr.rmand = r.mand.y)
pts <- pts %>% mutate(arid = MAP/(MAT + 10))
#join plant data
seeds <- select(seeds, -Season)
seeds <- left_join(seeds, mn.plt, by = c("Site", "Year"))
seeds$Visit <- gsub("Spring", "spring", seeds$Visit)
seeds$Visit <- gsub("Summer", "summer", seeds$Visit)
seeds <- left_join(seeds, cwm.ants, by = c("Year" = "year", "Visit" = "season", "Site"))
seeds <- left_join(seeds, cwm.gran.sites, by = c("Year" = "year", "Visit" = "season", "Site"))
seeds <- rename(seeds, gr.webers = webers.y, gr.rmand = r.mand.y)
seeds <- seeds %>% mutate(arid = MAP/(MAT + 10))
#add mean ant abuns
seeds <- seeds %>% left_join(mn.ants, by = c("Site", "Visit"= "season","Year"  ="year"))
#all site level data in one dataframe
site.env <- pts %>% select(1,3,4, 13:17, 20:26, 29)
site.env <- unique(site.env)
site.env <- left_join(site.env, cwm.ants, by = c("year", "season", "Site"))
site.env <- left_join(site.env, cwm.gran.sites, by = c("year", "season", "Site"))
site.env <- rename(site.env, gr.webers = webers.y, gr.rmand = r.mand.y)
site.env <- left_join(site.env, mn.ants, by = c("Site", "season", "year"))
# Chunk 14
library(corrplot)
M <- select(site.env, 4:6, 8:20)
M = cor(M)
corrplot(M, method = "color", addCoef.col = 'black', tl.cex = 0.75)
N <- select(site.env, 4:6, 8:24)
N <- drop_na(N)
N <- cor(N)
corrplot(N, method = "color", addCoef.col = 'black', tl.cex = 0.75)
ggplot(site.env, aes(arid, mn.abun.ants)) + geom_smooth(method = "lm")
# Chunk 15
group_by(prov, prov) %>% count()
sum(prov.ag$invasive)
sum(prov.ag$native)
# Chunk 16
m11 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site) + (1|Year), family = "poisson", plt.ag)
summary(m11)
#adding a random effect for year doesn't improve
m1 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site) + (1|Year), family = poisson(), plt.ag)
#adding ndvi does not improve
m2 <- glmmTMB(rich ~  arid * Microsite.x + ndvi + (1|Site), family = poisson(), plt.ag)
summary(m2)
AIC(m1, m2)
AIC(m2, m1.int)
#adding the interaction does improve a lot
m1.int <- glmmTMB(rich ~  arid * Microsite.x + (1|Site), family = "poisson", plt.ag)
summary(m1.int)
m1.int2 <- glmmTMB(rich ~  arid * Microsite.x + ndvi + (1|Site), family = "poisson", plt.ag)
AIC(m1.int, m1.int2)
BIC(m1.int, m1.int2)
summary(m1.int)
car::Anova(m1.int)
ggplot(plt.ag, aes(seed.weight, cwm.inv)) + geom_smooth()
ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth()
ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth()
ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth(method = "lm")
cor.test(plt.ag$seed.weight, plt.ag$nat.cwm)
cor.test(plt.ag$seed.weight, plt.ag$cwm.inv)
t.test(plt.ag$native, plt.ag$invasive)
#native seed weights
ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")
m6 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m6)
m7 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + (1|Site), plt.ag)
summary(m7)
car::Anova(m7)
m8 <- glmmTMB(log(nat.cwm) ~ Microsite.x  + arid + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m8)
car::Anova(m8)
AIC(m6, m7, m8)
BIC(m6, m7, m8)
em <- emtrends(m8, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)
#invasives
m8 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m8)
m9 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m9)
AIC(m8, m9)
BIC(m8, m9)
m8.2 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers  + ndvi + (1|Site), plt.ag)
summary(m8.2)
glmm.hp(m8.2)
car::Anova(m8)
glmm.hp(m8)
ggplot(plt.ag, aes(arid, log(cwm.inv), fill = Microsite.x)) + geom_smooth(method = "lm")
re <- simulateResiduals(m1)
plot(re)
ggplot(plt.ag, aes(arid, log(seed.weight), fill = Microsite.x)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(arid, cwm.inv, fill = Microsite.x)) + geom_smooth(method = "lm")
ggplot(pts, aes(ndvi, gr.abun, fill = Microsite)) + geom_smooth(method = "lm")
ggplot(pts, aes(arid, gr.abun, fill = Microsite)) + geom_smooth(method = "lm")
ggplot(pts, aes(ndvi, gr.richness, fill = Microsite)) + geom_smooth(method = "lm")
ggplot(pts, aes(arid, gr.richness, fill = Microsite)) + geom_smooth(method = "lm")
m3 <- glmmTMB(gr.richness ~ ndvi + Microsite +arid + (1|Site), family = "poisson", ptsreps)
m2 <- glmmTMB(gr.richness ~ Microsite +arid + (1|Site), family = "poisson", pts)
m2 <- glmmTMB(gr.richness ~ Microsite +arid + (1|Site), family = "poisson", pts)
m3 <- glmmTMB(gr.richness ~ ndvi + Microsite +arid + (1|Site), family = "poisson", pts)
m4 <- glmmTMB(gr.richness ~ ndvi + Microsite +(1|Site), family = "poisson", pts)
AIC(m2, m3, m4)
summary(m3)
check_overdispersion(m3)
performance(m3)
glmm.hp(m3)
m4.nb1 <- glmmTMB(gr.abun ~ arid + Microsite  + ndvi +(1|Site), family = "nbinom1", ptsreps)
m4.nb1 <- glmmTMB(gr.abun ~ arid + Microsite  + ndvi +(1|Site), family = "nbinom1", pts)
glmm.hp(m4.nb1)
options(scipen = 999)
glmm.hp(m4.nb1)
glmm.hp(m4.nb1, commonality = TRUE)
ggplot(plt.ag, aes(seed.weight, cwm.inv)) + geom_smooth()
ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth()
ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth()
ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth(method = "lm")
cor.test(plt.ag$seed.weight, plt.ag$nat.cwm)
cor.test(plt.ag$seed.weight, plt.ag$cwm.inv)
t.test(plt.ag$native, plt.ag$invasive)
#native seed weights
ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")
m6 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m6)
m7 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + (1|Site), plt.ag)
summary(m7)
car::Anova(m7)
m8 <- glmmTMB(log(nat.cwm) ~ Microsite.x  + arid + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m8)
car::Anova(m8)
AIC(m6, m7, m8)
BIC(m6, m7, m8)
em <- emtrends(m8, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)
#invasives
m8 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m8)
m9 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m9)
AIC(m8, m9)
BIC(m8, m9)
m8.2 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers  + ndvi + (1|Site), plt.ag)
summary(m8.2)
glmm.hp(m8.2)
car::Anova(m8)
glmm.hp(m8)
ggplot(plt.ag, aes(arid, log(cwm.inv), fill = Microsite.x)) + geom_smooth(method = "lm")
re <- simulateResiduals(m1)
plot(re)
ggplot(plt.ag, aes(arid, log(seed.weight), fill = Microsite.x)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")
ggplot(plt.ag, aes(arid, cwm.inv, fill = Microsite.x)) + geom_smooth(method = "lm")
glmm.hp(m8.2)
