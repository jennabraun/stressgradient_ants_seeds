---
title: "Data"
format: html
editor: visual
---

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)
library(performance)
library(glmmTMB)
library(emmeans)
library(vegan)
library(FD)
library(sf)
library(DHARMa)
library(glmm.hp)
```

## Site information

```{r}

sites <- read.csv("Raw Data/sites.csv")
sites <- st_as_sf(sites, coords=c("Long","Lat"), crs=4326)
# plot(sites)
# st_write(sites, "studysites.shp")
# 
# #read in bioclim data from other repo
env <- terra::rast("F:/CH2_ant-plant_mutualism_synthesis/na_rasters.grd")

#MAP and MAT from Worldclim 
climsites <- terra::extract(env, sites)
sites <- cbind(climsites, sites)
sites <- select(sites, 2, 5, 21:25)
#clean up NDVI values

sites <- rename(sites, MAT = wc2.1_30s_bio_1, MAP = wc2.1_30s_bio_12)
sites <- select(sites, 1:3, 5, 7)
sites <- unique(sites)


ndvi <- read.csv("Raw Data/NDVI.csv")
ndvi$NDVI20231[is.na(ndvi$NDVI20231)] <- 0
ndvi$NDVI20241[is.na(ndvi$NDVI20241)] <- 0
ndvi <- mutate(ndvi, ndvi = NDVI20231 + NDVI20241)
ndvi <- select(ndvi, 1:3, 8)
ndvi <- left_join(ndvi, sites, by = c("Site", "Year"))
```

## Annual abundance and richness

```{r}

plts <- read.csv("Raw Data/annuals/allplants_IDed.csv")
plts <- dplyr::select(plts, -X)
plts <- dplyr::select(plts, -6)
str(plts)



plt_wide <- plts %>% pivot_wider(names_from = species, values_from = abun)



unique(plt_wide$Year.NA)
unique(plt_wide$Rep.NA)
unique(plt_wide$Site)
unique(plt_wide$Microsite)

plt_wide$uniID <- paste(plt_wide$Site, plt_wide$Year.NA, plt_wide$Microsite, plt_wide$Rep.NA)
plt_wide$uniID <- gsub(" ", "", plt_wide$uniID)

plt_wide[is.na(plt_wide)] <- 0


env <- dplyr::select(plt_wide, 1:5, uniID)
comm <- dplyr::select(plt_wide, 6:91)

richness <- specnumber(comm)
abun <- rowSums(comm)

env$rich <- richness
env$abun <- abun

#import plant metadata for zero rows
reps <- read.csv("Raw Data/reps.csv")
reps <- filter(reps, season == "spring")
reps$uniID <- paste(reps$Site, reps$year, reps$Microsite, reps$Rep)
reps$uniID <- gsub(" ", "", reps$uniID)
plt.ag <- left_join(reps, env, by = "uniID")

plt.ag$rich[is.na(plt.ag$rich)] <- 0
plt.ag$abun[is.na(plt.ag$abun)] <- 0





plt.ag <- rename(plt.ag, Site = Site.x, Year = year)
plt.ag$Year <- as.factor(plt.ag$Year)
ndvi$Year <- as.factor(ndvi$Year)
plt.ag <- left_join(plt.ag, ndvi, by = c("Site", "Year"))

precip <- read.csv("Raw Data/winterprecip_compiled.csv")
precip$Year <- as.factor(precip$Year)


plt.ag <- left_join(plt.ag, precip, by = c("Site", "Year"))
plt.ag <- filter(plt.ag, Season == "spring")


#remove doubled rows
plt.ag <- unique(plt.ag)

#attach provence for invasive/native info

prov <- read.csv("Raw Data/plantprov.csv")
plts <- left_join(plts, prov, by = "species")

prov.ag <- plts %>% group_by(Year.NA, Rep.NA, Site, Microsite, prov) %>% summarise(prov.abun = sum(abun)) %>% ungroup()
str(prov.ag)
prov.ag <- filter(prov.ag, prov !="") %>% pivot_wider(names_from = prov, values_from = prov.abun)
prov.ag[is.na(prov.ag )] <- 0


plt.ag <- select(plt.ag, 1:6, 10, 16:20)
prov.ag$Year.NA <- as.factor(prov.ag$Year.NA)
plt.ag <- left_join(plt.ag, prov.ag, by = c("Year" = "Year.NA", "Site", "Microsite.x" = "Microsite", "Rep" = "Rep.NA"))

plt.ag$invasive[is.na(plt.ag$invasive)] <- 0
plt.ag$native[is.na(plt.ag$native)] <- 0


#mean plants

mn.plt <- plt.ag %>% group_by(Site, Year) %>% summarise(mean.abun = mean(abun), mean.rich = mean(rich), mean.inv = mean(invasive), mean.native = mean(native))

```

##CWM Seeds

```{r}

#read in plant traits

ptraits <- read.csv("clean data/annuallist.csv")
ptraits <- dplyr::select(ptraits, 1, 4)


# determine trait coverage by abundance
byspecies <- plt_wide[6:91] %>% colSums()
byspecies <- as.data.frame(byspecies)
byspecies$species <- row.names(byspecies)

sum(byspecies$byspecies)

tr <- left_join(ptraits, byspecies, by = "species")
sum(tr$byspecies, na.rm = TRUE)

tr_filter <- filter(tr, seed.weight >= 0)
sum(tr_filter$byspecies, na.rm = TRUE)

#microsite level CWM

library(FD)
comm <- plt_wide[6:92]

comm <- rename(comm, Ditaxis.lanceolata = Ditaxis.serrata)

row.names(comm) <- comm$uniID
#comm <- dplyr::select(comm, -uniID)
comm <- comm%>%filter(rowSums(across(where(is.numeric)))!=0)


row.names(ptraits) <- ptraits$species
ptraits <- dplyr::select(ptraits, seed.weight)

ptraits <- filter(ptraits, seed.weight > 0)
names.use <- names(comm)[(names(comm) %in% row.names(ptraits))]
#add the uniID to the name vector
names.use <- append(names.use, "uniID")
df.subset <- comm[, names.use]
df.subset <- df.subset%>%filter(rowSums(across(where(is.numeric)))!=0)
sampleIDs <- df.subset$uniID
df.subset <- dplyr::select(df.subset, -uniID)

func.seeds <- dbFD(ptraits, df.subset, w.abun = TRUE)

df.subset$cwm.seedweight <- func.seeds$CWM
df.subset$uniID <- sampleIDs

cwm <- cbind(df.subset$uniID, df.subset$cwm.seedweight)
cwm <- rename(cwm, uniID = 'df.subset$uniID')
#join to larger dataframe

env <- left_join(env, cwm, by = "uniID")

#microsite level by provence

#make a vector of each set of species by provence

inv <- filter(prov, prov == "invasive")
nat <- filter(prov, prov == "native")

invnames <- inv$species
ptraits.inv <- filter(ptraits, row.names(ptraits) %in% invnames)
invnames <- append(invnames, "uniID")

df.subset <- comm[, names.use]
df.subset.inv <- df.subset
df.inv <- df.subset.inv[, invnames]
df.inv <- df.inv%>%filter(rowSums(across(where(is.numeric)))!=0)



uniID <- df.inv$uniID
df.inv <- select(df.inv, -uniID)
row.names(df.inv) <- uniID
#site levels by species

func.inv <- dbFD(ptraits.inv, df.inv, w.abun = TRUE)
cwm.inv <- func.inv$CWM
cwm.inv$uniID <- uniID
cwm.inv <- rename(cwm.inv, cwm.inv = seed.weight)


#natives
natnames <- nat$species
ptraits.nat <- filter(ptraits, row.names(ptraits) %in% natnames)

natnames <- append(natnames, "uniID")
print(natnames)
df.subset <- comm[, natnames]
df.subset.nat <- df.subset


natnames <- natnames[(natnames %in% row.names(ptraits))]
natnames <- append(natnames, "uniID")
df.nat <- df.subset.nat[, natnames]
df.nat <- df.nat%>%filter(rowSums(across(where(is.numeric)))!=0)



uniID <- df.nat$uniID
df.nat <- select(df.nat, -uniID)
row.names(df.nat) <- uniID
#site levels by species

func.nat <- dbFD(ptraits.nat, df.nat, w.abun = TRUE)

cwm.nat <- func.nat$CWM
cwm.nat$uniID <- uniID
cwm.nat <- rename(cwm.nat, nat.cwm = seed.weight)

#cwm to main dataset

plt.ag <- left_join(plt.ag, cwm, by = "uniID")

plt.ag <- left_join(plt.ag, cwm.inv, by = "uniID")

plt.ag <- left_join(plt.ag, cwm.nat, by = "uniID")




#site level by species
comm.site <- plt_wide %>% group_by(Site, Year.NA) %>% summarise(across(where(is.numeric), sum))
comm.site <- rename(comm.site, Ditaxis.lanceolata = Ditaxis.serrata)

uniID <- paste(comm.site$Site, comm.site$Year.NA)
comm.site <- select(comm.site, 4:89)
row.names(comm.site) <- uniID

names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits))]
#no zero rows at site level
df.subset <- comm.site[, names.use]

func.site <- dbFD(ptraits, df.subset, w.abun = TRUE)





#Site levels by provenance
names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits.inv))]
#no zero rows at site level
df.subset.inv <- comm.site[, names.use]

func.site.inv <- dbFD(ptraits.inv, df.subset.inv, w.abun = TRUE)


names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits.nat))]
#no zero rows at site level
df.subset.nat <- comm.site[, names.use]

func.site.nat <- dbFD(ptraits.nat, df.subset.nat, w.abun = TRUE)


#join all the site levels to the other plant site level
cwm.site <- func.site$CWM
cwm.site <- rename(cwm.site, cwm.site = seed.weight)

cwm.site.inv <- func.site.inv$CWM
cwm.site.inv <- rename(cwm.site.inv, cwm.site.inv = seed.weight)

cwm.site.nat <- func.site.nat$CWM
cwm.site.nat <- rename(cwm.site.nat, cwm.site.nat = seed.weight)


mn.plt <- cbind(mn.plt, cwm.site, cwm.site.inv, cwm.site.nat)

```

## Seed Removal

```{r}
seed2023 <- read.csv("Raw Data/seedrates2023.csv")
#526 put out
seed2023 <- filter(seed2023, ending.weight != "disturbed")
seed2023 <- filter(seed2023, ending.weight != "broken")
seed2023 <- filter(seed2023, ending.weight != "was never put out")

seed2023 <- dplyr::select(seed2023, 1:7)

seed2024 <- read.csv("Raw Data/seedsrates2024.csv")
seed2024 <- filter(seed2024, ending.weight != "disturbed")
seed2024 <- filter(seed2024, ending.weight != "not put out" & ending.weight != "never put out")
seed2024$Site <- gsub("yucca", "HOM", seed2024$Site)

seeds <- rbind(seed2023, seed2024)
seeds$ending.weight <- as.numeric(seeds$ending.weight)




unique(seeds$Size)
seeds$Size <- gsub(" ", "", seeds$Size)
seeds$Size <- gsub("medium", "med", seeds$Size)
seeds$Year <- as.factor(seeds$Year)

seeds$Site <- gsub(" ", "", seeds$Site)

ndvi$Year <- as.factor(ndvi$Year)
ndvi <- unique(ndvi)
ndvi <- filter(ndvi, Season == "spring")

seeds$Site <- gsub("YuccaGrove", "Yucca", seeds$Site)
seeds$Site <- gsub("Cuyama1", "Cuyama 1", seeds$Site)
seeds$Site <- gsub("Cuyama2", "Cuyama 2", seeds$Site)

seeds <- left_join(seeds, ndvi, by = c("Site", "Year"))
seeds <- unique(seeds)


seeds <- left_join(seeds, precip, by = c("Site", "Year"))


```

# Ant Abundance and Richness - pitfall trap level

```{r}
arth2 <- read.csv("Raw Data/pitfall_arth.csv")
ants <- dplyr::filter(arth2, Family == "Formicidae")
sum(ants$count)

unique(ants$Site)
unique(ants$Year)
ants <- filter(ants, Species != "alate")
ants <- filter(ants, Species != "alata")
ants <- filter(ants, Species != "damaged")
ants <- filter(ants, Genus != "damaged")
ants <- filter(ants, Species != "alate/queen")	
ants$Genus <- gsub(" ", "", ants$Genus)

sp <- ants %>% group_by(Genus, Species) %>% summarize(sum(count))

write.csv(sp, "clean Data/ants_species.csv")
write.csv(ants, "clean Data/ants_only.csv")

ants <- dplyr::select(ants, 1:5, 11)

#make wide
str(ants)
ants <- ants %>% group_by(Year, Season, Site, label, Species) %>% summarize(abun = sum(count))
ants_wide <- pivot_wider(ants, names_from = Species, values_from = abun)

ants_wide[is.na(ants_wide)] <- 0

envants <- dplyr::select(ants_wide, 1:4)
commants <- ants_wide %>% ungroup() %>% dplyr::select(5:29)


richness <- specnumber(commants)
abun <- rowSums(commants)

envants$rich <- richness
envants$abun <- abun

envants <- envants %>% separate(label, into = c("Microsite", "rep"), sep = 1)

envants$Microsite <- gsub("S", "shrub", envants$Microsite)
envants$Microsite <- gsub("O", "open", envants$Microsite)
envants$Year <- as.factor(envants$Year)


#need empty pitfalls to fill in zeroes

reps <- read.csv("Raw Data/reps.csv")
pitsreps <- filter(reps, Pit == "y")
pitsreps$year <- as.factor(pitsreps$year)
pitsreps$Rep <- as.character(pitsreps$Rep)
ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))





ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))

ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))


ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0


```

# CWM Ants

```{r}
atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)

unique(atraits$ant.species)
unique(atraits$site)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)

unique(ants$Site)

#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)



tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(65, 5:64)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]


names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]
row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))


#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885

atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names



setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(df)
str(atraits)
rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names
func.ants <- dbFD(atraits, df, w.abun = TRUE)


cwmants <- cbind(tr.names, func.ants$CWM)
cwmants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmants$tr.names)
cwmants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmants$tr.names)
#make the labels match and join back to trap data

cwmants <- separate(cwmants, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")


cwmants <- separate(cwmants, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmants$Microsite <- gsub("S", "shrub", cwmants$Microsite)
cwmants$Microsite <- gsub("O", "open", cwmants$Microsite)

cwmants$Site <- gsub("Cuyama1", "Cuyama 1", cwmants$Site)
cwmants$Site <- gsub("Cuyama2", "Cuyama 2", cwmants$Site)

```

# Granivores only

```{r}


commgran <- ants_wide %>% ungroup() %>% dplyr::select(5:29)

sp <- read.csv("Raw data/ants_species.csv")
sp <- filter(sp, class != "other")
sp <- sp$Species

names.use <- names(commgran)[(names(commgran) %in% sp)]

df.subset <- commgran[, names.use]
commgran <- df.subset

gr.richness <- specnumber(commgran)
gr.abun <- rowSums(commgran)

envants$rich <- richness
envants$abun <- abun
envants$gr.richness <- gr.richness
envants$gr.abun <- gr.abun


#need empty pitfalls to fill in zeroes


ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))





ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))

ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))


ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0

ptsreps$gr.richness[is.na(ptsreps$gr.richness)] <- 0
ptsreps$gr.abun[is.na(ptsreps$gr.abun)] <- 0



```

#Granivore Trait Calculations

```{r}


#reorder ants data
tr_wide <- ants
tr <- filter(ants, Species %in% sp)
tr_wide <- tr
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)



tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(42, 5:41)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]

atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- filter(atraits, ant.species %in% names.use)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)


unique(ants$Site)

names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]

row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))



atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names



setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))

rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names

func.gran <- dbFD(atraits, df, w.abun = TRUE)



cwmgran <- cbind(tr.names, func.gran$CWM)
cwmgran$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmgran$tr.names)
cwmgran$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmgran$tr.names)
#make the labels match and join back to trap data

cwmgran <- separate(cwmgran, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")


cwmgran <- separate(cwmgran, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmgran$Microsite <- gsub("S", "shrub", cwmgran$Microsite)
cwmgran$Microsite <- gsub("O", "open", cwmgran$Microsite)

cwmgran$Site <- gsub("Cuyama1", "Cuyama 1", cwmgran$Site)
cwmgran$Site <- gsub("Cuyama2", "Cuyama 2", cwmgran$Site)

```

# Site level Ant CWM

```{r}


atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)

atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)




#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())


#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)


tr_wide <- tr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
tr_wide$Year <- as.factor(tr_wide$Year)
tr_wide <- left_join(tr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))

tr_wide <- mutate(tr_wide, occ = site.total/pit.count)
tr_wide <- select(tr_wide, 1:4, 7)
tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = occ)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(64, 4:63)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]

names(tr_wide) <- gsub(" ", "", names(tr_wide))

names.use <- names(tr_wide)[(names(tr_wide) %in% row.names(atraits$species.site))]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]

atraits <- atraits[order(atraits$species.site),]
tr_wide <- tr_wide[,order(names(tr_wide))]
tr_wide <- select(tr_wide, -LeptothoraxHOM)
row.names(atraits)
names(tr_wide)


#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885

atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names





setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(tr_wide))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(tr_wide)
colnames(tr_wide) == rownames(atraits)

names <- seq(1:59)

names2 <- colnames(tr_wide)

identical(names, names2)

row.names(atraits) <- names
names(tr_wide) <- names


setdiff(names, names2)

#set them to numbers

func.ants.site <- dbFD(atraits, tr_wide, w.abun = TRUE)


# 
# 
# 
# 
# 
# 
cwm.ants <- func.ants.site$CWM
cwm.ants <- cbind(tr.names, cwm.ants)

cwm.ants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.ants$tr.names)
cwm.ants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.ants$tr.names)
cwm.ants <- separate(cwm.ants, col = 1, into = c("year", "season", "Site"), sep = " ")

cwm.ants$Site <- gsub("Cuyama1", "Cuyama 1", cwm.ants$Site)
cwm.ants$Site <- gsub("Cuyama2", "Cuyama 2", cwm.ants$Site)

```

#Site level Granv CWM
```{r}
#need to filter out species to just the granivores
gtraits <- read.csv("Raw Data/anttraits.csv")
gtraits <- mutate(gtraits, r.mand = mandible/webers)


gtraits <- gtraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

gtraits$species.site <- paste(gtraits$ant.species, gtraits$site)
gtraits <- filter(gtraits, ant.species %in% sp)
gtraits <- ungroup(gtraits) %>% dplyr::select(5, 3, 4)




#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())


#reorder ants data

tr <- filter(ants, Species %in% sp)
gr_wide <- tr



gr_wide$species.site <- paste(gr_wide$Species, gr_wide$Site)
gr_wide <- gr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
gr_wide <- dplyr::select(gr_wide, 1:4, 7, 8)


gr_wide <- gr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
gr_wide$Year <- as.factor(gr_wide$Year)
gr_wide <- left_join(gr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))

gr_wide <- mutate(gr_wide, occ = site.total/pit.count)
gr_wide <- select(gr_wide, 1:4, 7)
gr_wide <- pivot_wider(gr_wide, names_from = species.site, values_from = occ)

gr_wide[is.na(gr_wide)] <- 0



gr_wide$ID <- paste(gr_wide$Year, gr_wide$Season, gr_wide$Site)
gr_wide <- gr_wide %>% ungroup() %>% dplyr::select(41, 4:40)

#make a vector of the row names and remove the first value

tr.names <- gr_wide$ID
gr_wide <- gr_wide[,-1]

names(gr_wide) <- gsub(" ", "", names(gr_wide))






gtraits <- gtraits[order(gtraits$species.site),]
gr_wide <- gr_wide[,order(names(gr_wide))]
#gr_wide <- select(gr_wide, -LeptothoraxHOM)


atr.names <- gtraits$species.site
atr.names <- gsub(" ", "", atr.names)

row.names(gtraits) <- atr.names

row.names(gtraits)
names(gr_wide)


gtraits <- gtraits[,2:3]



identical(row.names(gtraits), colnames(gr_wide))



names <- seq(1:37)

row.names(gtraits) <- names
names(gr_wide) <- names



#set them to numbers

func.gran.site <- dbFD(gtraits, gr_wide, w.abun = TRUE)


cwm.gran.sites <- func.gran.site$CWM
cwm.gran.sites <- cbind(tr.names, cwm.gran.sites)
#cwm.gran.sites <- cwm.gran.sites[,-2]

cwm.gran.sites$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.gran.sites$tr.names)
cwm.gran.sites$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.gran.sites$tr.names)
cwm.gran.sites <- separate(cwm.gran.sites, col = 1, into = c("year", "season", "Site"), sep = " ")

cwm.gran.sites$Site <- gsub("Cuyama1", "Cuyama 1", cwm.gran.sites$Site)
cwm.gran.sites$Site <- gsub("Cuyama2", "Cuyama 2", cwm.gran.sites$Site)


mean(cwm.ants$webers)
mean(cwm.gran.sites$webers)

identical(cwm.ants$webers, cwm.gran.sites$webers)
```
# Mean ant

```{r}

sites <- sites %>% mutate(arid = MAP/(MAT + 10))
sites$Year <- as.factor(sites$Year)
plt.ag <- left_join(plt.ag, sites, by = c("Site", "Year"))

plt.ag <- left_join(plt.ag, precip, by = c("Site", "Year"))



#combine pits into means for adding to the dispersal models
mn.ants <- ptsreps %>% group_by(Site, season, year) %>% summarize(mn.abun.ants = mean(abun), mn.rich.ants = mean(rich), mn.gr.abun = mean(gr.abun), mn.gr.rich = mean(gr.richness))



```

# Combine the datasets

```{r}

#plt.ag is the main plant dataset


plt.ag <- left_join(plt.ag, filter(cwm.ants, season == "spring"), by = c("Site", "Year" = "year"))

plt.ag <- left_join(plt.ag, filter(cwm.gran.sites, season == "spring"), by = c("Site", "Year" = "year"))

plt.ag <- rename(plt.ag, gr.webers = webers.y, gr.rmand = r.mand.y)



##joining up the pitfall trap data


ptsreps <- left_join(ptsreps, cwmants, by = c("year", "Site", "season", "Microsite", "Rep"))
ptsreps <- select(ptsreps, -X, -Season, shrub.species)

pts <- left_join(ptsreps, mn.plt, by = c("year" = "Year", "Site"))
pts <- left_join(pts, cwmgran, by = c("year", "Site", "season", "Microsite", "Rep"))
pts <- rename(pts, gr.webers = webers.y, gr.rmand = r.mand.y)
pts <- pts %>% mutate(arid = MAP/(MAT + 10))


#join plant data
seeds <- select(seeds, -Season)

seeds <- left_join(seeds, mn.plt, by = c("Site", "Year"))

seeds$Visit <- gsub("Spring", "spring", seeds$Visit)
seeds$Visit <- gsub("Summer", "summer", seeds$Visit)


seeds <- left_join(seeds, cwm.ants, by = c("Year" = "year", "Visit" = "season", "Site"))

seeds <- left_join(seeds, cwm.gran.sites, by = c("Year" = "year", "Visit" = "season", "Site"))
seeds <- rename(seeds, gr.webers = webers.y, gr.rmand = r.mand.y)
seeds <- seeds %>% mutate(arid = MAP/(MAT + 10))

#add mean ant abuns
seeds <- seeds %>% left_join(mn.ants, by = c("Site", "Visit"= "season","Year"  ="year"))




#all site level data in one dataframe

site.env <- pts %>% select(1,3,4, 13:17, 20:26, 29)
site.env <- unique(site.env)

site.env <- left_join(site.env, cwm.ants, by = c("year", "season", "Site"))
site.env <- left_join(site.env, cwm.gran.sites, by = c("year", "season", "Site"))
site.env <- rename(site.env, gr.webers = webers.y, gr.rmand = r.mand.y)

site.env <- left_join(site.env, mn.ants, by = c("Site", "season", "year"))

```



#Heat map for site
```{r}
library(corrplot)

M <- select(site.env, 4:6, 8:20)
M = cor(M)
corrplot(M, method = "color", addCoef.col = 'black', tl.cex = 0.75)

N <- select(site.env, 4:6, 8:24)
N <- drop_na(N)
N <- cor(N)

corrplot(N, method = "color", addCoef.col = 'black', tl.cex = 0.75)



ggplot(site.env, aes(arid, mn.abun.ants)) + geom_smooth(method = "lm")

```



## Plant Models

### Annual Richness
```{r}
m11 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site) + (1|Year), family = "poisson", plt.ag)
summary(m11)
#adding a random effect for year doesn't improve
m1 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site), family = poisson(), plt.ag)

#adding ndvi does not improve
m2 <- glmmTMB(rich ~  arid + Microsite.x + ndvi + (1|Site), family = poisson(), plt.ag)
summary(m2)
AIC(m1, m2)


#adding the interaction does improve a lot
m1.int <- glmmTMB(rich ~  arid * Microsite.x + (1|Site), family = "poisson", plt.ag)


AIC(m1, m1.int)

summary(m1.int)
car::Anova(m1.int)


em <- emtrends(m1.int, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)

ggplot(plt.ag, aes(arid, rich, fill = Microsite.x)) + geom_smooth(method = "lm")





m1.int <- glmmTMB(rich ~  total_precip_inches * Microsite.x + (1|Site), family = "poisson", plt.ag)
check_overdispersion(m1.int)
summary(m1.int)
car::Anova(m1.int)

em <- emtrends(m1.int, "Microsite.x", var = "total_precip_inches")
pairs(em)
summary(em)
test(em)


ggplot(plt.ag, aes(total_precip_inches, rich, fill = Microsite.x)) + geom_smooth(method = "lm")






m2 <- glmmTMB(rich ~  MAT.x  + total_precip_inches * Microsite.x +(1|Site), family = "poisson", plt.ag)
summary(m2)
glmm.hp(m2)
```

### Annual Abundance
```{r}
#annual abundance

m2 <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "poisson", plt.ag)
check_overdispersion(m2)
m2.nb <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "nbinom2", plt.ag)
m2.nb1 <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "nbinom1", plt.ag)
m2.int <- glmmTMB(abun ~  arid * Microsite.x + (1|Site), family = "nbinom1", plt.ag)
m2.inb <- glmmTMB(abun ~  arid * Microsite.x + (1|Site), family = "nbinom2", plt.ag)
summary(m2.nb1)
summary(m2.nb)

m2.int <- glmmTMB(abun ~  arid * Microsite.x + ndvi + (1|Site), family = "nbinom1", plt.ag) 
summary(m2.int)
glmm.hp(m2.int)

ggplot(plt.ag, aes(arid, abun, fill = Microsite.x)) + geom_smooth(method = "lm")
```

### Seed size

```{r}


m1 <- glmmTMB(log(seed.weight) ~ arid + Microsite.x + gr.webers + ndvi + (1|Site) + (1|Year), plt.ag)


m2 <- glmmTMB(log(seed.weight) ~ arid + Microsite.x + gr.webers + (1|Site) + (1|Year), plt.ag)

AIC(m1, m2)

m3 <- glmmTMB(log(seed.weight) ~ arid + Microsite.x  + (1|Site) + (1|Year), plt.ag)

summary(m3)
m4 <- glmmTMB(log(seed.weight) ~ arid * Microsite.x  + (1|Site) + (1|Year), plt.ag)

m5 <- glmmTMB(log(seed.weight) ~ arid:Microsite.x  + gr.webers + ndvi +(1|Site) + (1|Year), plt.ag)

summary(m5)

m5 <- glmmTMB(log(nat.cwm) ~ arid:Microsite.x  + gr.webers + ndvi +(1|Site) + (1|Year), plt.ag)

summary(m5)




ggplot(plt.ag, aes(arid, nat.cwm, fill = Microsite.x)) + geom_smooth(method = "lm")

ggplot(plt.ag, aes(arid, cwm.inv, fill = Microsite.x)) + geom_smooth(method = "lm")



m5 <- glmmTMB(log(cwm.inv) ~ arid:Microsite.x  + ndvi +(1|Site) + (1|Year), plt.ag)

summary(m5)
glmm.hp(m5)

e1 <- emtrends(m5, ~ Microsite.x, var = "arid")
e1
pairs(e1)
test(e1)

AIC(m1, m2, m3, m4, m5)




summary(m2)
glmm.hp(m5)

re <- simulateResiduals(m1)
plot(re)

ggplot(plt.ag, aes(arid, log(seed.weight), fill = Microsite.x)) + geom_smooth(method = "lm")


ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")


ggplot(plt.ag, aes(arid, log(cwm.inv), fill = Microsite.x)) + geom_smooth(method = "lm")




#inverse gamma doesn't run
m3 <- glmmTMB(seed.weight ~ arid + Microsite.x + gr.webers + ndvi + (1|Site), family = Gamma(link = "inverse"), plt.ag)




shapiro.test(resid(m1.1))
m2 <- glmmTMB(seed.weight ~ arid + Microsite.x + gr.webers + ndvi + (1|Site), family = tweedie(link = "log"), plt.ag)

re <- simulateResiduals(m2)

plot(re)


m1.g <- glmmTMB(seed.weight ~ arid + Microsite.x + gr.webers + ndvi + (1|Site), family = inverse.gamma(), plt.ag)
summary(m1.g)
AIC(m1.g)
AIC(m1, m1.g)

check_distribution(m1.g)

glmm.hp(m1.g)


glmm.hp(m1, commonality = TRUE)
ggplot(plt.ag, aes(total_precip_inches, seed.weight, fill = Site)) + geom_smooth()


ggplot(plt.ag, aes(total_precip_inches, seed.weight, fill = Microsite.x)) + geom_smooth(method = "lm")




ggplot(plt.ag, aes(arid, seed.weight)) + geom_smooth(method = "lm")

m1 <- glmmTMB(native ~ arid  + Microsite.x + (1|Site), family = "nbinom2", plt.ag)
summary(m1)

m2 <- glmmTMB(invasive ~ arid  + Microsite.x + (1|Site), family = "nbinom2", plt.ag)
summary(m1)

```







```{r}

m3 <- glmmTMB(gr.abun ~ cur.arid  * Microsite  + (1|Site), family = "nbinom2", pts)

summary(m3)


m1 <- glmmTMB(webers.y ~ arid + cwm.site +(1|Site), filter(sit, season == "spring"))

summary(m1)

m3 <- glmmTMB(webers.y ~ cwm.site + arid  + Microsite  + ndvi + (1|Site) + (1|Year), ptsreps)

summary(m3)

m3 <- glmmTMB(webers.y ~ cwm.site +(1|Site), pts)
m3 <- glmmTMB(webers.y ~ cwm.site  + arid+ (1|Site), pts)
summary(m3)


interact_plot(m3, cwm.site, ndvi)

check_collinearity(m3)

tst <- pts %>% group_by(year, Site, season, cwm.site, arid, ndvi) %>% summarise(mn.web = mean(webers.y, na.rm = TRUE))

cor.test(tst$cwm.site, tst$mn.web)
cor.test(tst$cwm.site, tst$arid)
cor.test(tst$mn.web, tst$arid)
cor.test(tst$mn.web, tst$ndvi)

car::Anova(m3)
ggplot(pts, aes(cwm.site, webers.y)) + geom_smooth(method = "lm") + geom_point()
ggplot(pts, aes(cwm.site, webers.y, fill = Site)) + geom_smooth(method = "lm") + geom_point()

cor.test(pts$cwm.site, pts$webers.y)

library(plotly)

ig <- plot_ly(pts, x = ~arid, y = ~cwm.site, z = ~webers.x, color = ~Site)
ig
ggplot(pts, aes(x=arid, y=cwm.site, z=webers.x, color=Site)) + 
  theme_void() +
  axes_3D() +
  stat_3D()

library(scatterplot3d)

s3d <- scatterplot3d(arid, cwm.site, webers.y, data = pts)

varenv <- select(pts, webers.y, arid, ndvi, cwm.site, Site) %>% drop_na()

varp <- varpart(varenv$webers.y, ~varenv$arid, ~varenv$cwm.site, varenv$ndvi)

varp

plot(varp)

rda(varp)

r1 <- rda(varenv$webers.y ~varenv$arid)
RsquareAdj(r1)
anova(r1)

r1 <- rda(varenv$webers.y ~varenv$cwm.site)
RsquareAdj(r1)
anova(r1)

anova(varp)



m1 <-  psem(glmmTMB(cwm.site ~ arid  + ndvi + (1|Site), pts),
  glmmTMB(webers.y ~ arid  + cwm.site +(1|Site), pts))
summary(m1)
plot(m1)



sem <- update(m1, ndvi %~~% arid)
plot(sem)
summary(sem)


ggplot(pts2, aes(arid, webers.x)) + geom_smooth(method = "lm")
ggplot(pts2, aes(abun, webers.x)) + geom_smooth(method = "lm")

ggplot(pts2, aes(brome, arid)) + geom_boxplot()

ggplot(pts2, aes(arid, mean.inv)) + geom_smooth(method="lm")

ggplot(pts2, aes(arid, cwm.site.inv)) + geom_smooth()

m2 <- glmmTMB(cwm.site ~ arid + (1|Site), sit)
sit <- filter(sit, season == "spring")
summary(m2)

m1 <-  psem(
  glmmTMB(webers ~ cwm.site + arid  + (1|Site), pts),
  glmmTMB(cwm.site ~ arid  + webers.y + (1|Site), sit),
  glmmTMB(webers.y ~ arid  + (1|Site), sit))

m2  <- psem(
  glmmTMB(webers ~  cwm.site  + MAT + MAP + (1|Site), pts),
  glmmTMB(cwm.site ~ MAT + MAP +(1|Site), sit))

summary(m2)
sem <- update(m2, MAT %~~% MAP)

summary(sem)
plot(sem)

m1 <- glmmTMB(webers ~ arid +(1|Site), pts)

summary(m1)

summary(update(m2), standardize = "scale")
summary(m2)
plot(update(m2), standardize = "scale")
AIC(m1, m2)

summary(modelList)
anova(m2)
plot(m2)



m3 <- multigroup(modelList, group = "Size")

```



## Ant Models

### Gran Richness
```{r}

ptsreps <- ptsreps %>% mutate(arid = MAP/(MAT + 10))



cor.test(plt.ag$MAT.x, plt.ag$ndvi)
cor.test(sites$total_precip_inches, sites$ndvi)


m2 <- glmmTMB(gr.richness ~ total_precip_inches + Microsite  + (1|Site), family = "poisson", ptsreps)
summary(m2)

m2 <- glmmTMB(rich ~ ndvi + Microsite + arid + (1|Site/season), family = "poisson", ptsreps)

summary(m2)


m3 <- glmmTMB(gr.richness ~ ndvi + Microsite +arid + (1|Site), family = "poisson", ptsreps)
AIC(m2, m3)





m2 <- glmmTMB(gr.richness ~ Microsite  +  total_precip_inches  + (1|Site), family = "poisson", ptsreps)
summary(m2)



m2 <- glmmTMB(gr.richness ~ ndvi +Microsite  + arid + (1|season) + (1|Site), family = "poisson", ptsreps)
summary(m2)



m2 <- glmmTMB(gr.richness ~ total_precip_inches +Microsite   + (1|Site), family = "poisson", ptsreps)
summary(m2)

m2.1 <- glmmTMB(gr.richness ~ arid + Microsite + (1|season)   + (1|Site), family = "poisson", ptsreps)

summary(m2.1)


m2.1int <- glmmTMB(rich ~ arid* Microsite   + (1|Site), family = "poisson", ptsreps)
check_overdispersion(m2.1)
AIC(m2.1, m2.1int)
summary(m2.1)

```
### Gran abundance

```{r}

m2.1 <- glmmTMB(abun ~ arid+ Microsite   + (1|Site), family = "poisson", ptsreps)

m3.nb <- glmmTMB(abun ~ Microsite  + ndvi +(1|Site) + (1|year), family = "nbinom2", ptsreps)

summary(m3.nb)
performance(m3.nb)

m3.nbint <- glmmTMB(abun ~ arid+ Microsite   + ndvi+ (1|Site/year/season), family = "nbinom1", ptsreps)



summary(m3.nbint)


ggplot(ptsreps, aes(arid, abun)) + geom_smooth(method = "lm")

AIC(m2.1, m3.nb, m3.nbint)

summary(m3.nbint)

check_overdispersion(m2.1)
summary(m3.nb)

ggplot(ptsreps, aes(arid, abun, fill = Microsite)) + geom_smooth(method = "lm")


performance(m2)

ggplot(ptsreps, aes(ndvi, rich)) + geom_smooth(method = "lm")
ggplot(ptsreps, aes(ndvi, arid)) + geom_smooth(method = "lm")
ggplot(ptsreps, aes(arid, rich)) + geom_smooth(method = "lm")
ggplot(ptsreps, aes(MAT, rich)) + geom_smooth(method = "lm")
ggplot(ptsreps, aes(MAT, ndvi)) + geom_smooth(method = "lm")

m3nb1 <- glmmTMB(gr.abun ~ arid + Microsite + (1|Site), family = "nbinom2", ptsreps)
m3 <- glmmTMB(gr.abun ~ arid + Microsite + (1|Site), family = "nbinom1", ptsreps)

m3 <- glmmTMB(gr.abun ~ ndvi + Microsite + arid + (1|Site), family = "nbinom2", ptsreps)
#check_overdispersion(m3)
AIC(m3nb1, m3)
summary(m3nb1)

```

### Webers

```{r}
m5 <- glmmTMB(gr.webers ~ cwm.site + arid: Microsite + (1|Site) + (1|year), data = pts)
summary(m5)

m6 <- glmmTMB(gr.webers ~ cwm.site + arid: Microsite + (1|Site) + (1|year), data = pts)
summary(m6)

AIC(m5, m6)

m5 <- glmmTMB(gr.webers ~ cwm.site.nat + arid: Microsite + (1|Site) + (1|year), data = pts)
summary(m5)
glmm.hp(m5)

m5 <- glmmTMB(gr.webers ~ cwm.site.inv + arid: Microsite + (1|Site) + (1|year), data = pts)
summary(m5)

glmm.hp(m5)


ggplot(pts, aes(cwm.site, log(gr.webers), fill = Microsite)) + geom_smooth(method = "lm")





interact_plot(m5, cwm.site, arid)

sites$tr.names <- paste(sites$Year, sites$Season, sites$Site)
cwmsites <- left_join(cwm.ants, sites, by = "tr.names")

m5 <- glmmTMB(webers.x ~  MAT  + cwm.site + total_precip_inches +  (1|Site), data = pts)
summary(m5)


g1<- glmm.hp(m5, commonality = TRUE)
g1



plot.glmmhp(g1)

tst <- select(pts, webers, arid, cwm.site)
tst <- drop_na(tst)

web <- pts$webersweb <- pts$webercwm.sites
web <- drop_na(web)
arid <- pts$arid
site <- pts$cwm.site
varpart(tst$webers, tst$arid, tst$cwm.site)



st <- left_join(cwmsites, mn.plt, by = c("Site", "Year"))


m1 <- glmmTMB(webers ~  arid +cwm.site, st)

summary(m1)

library(interactions)

interact_plot(m5, pred = cwm.site, modx = arid)

ggplot(pts, aes(arid, cwm.site)) + geom_smooth(method = "lm")
dry <- filter(cwmsites, arid < 15)
ggplot(dry, aes(arid, webers)) + geom_smooth(method = "lm")


library(predictmeans)
m5 <- glmmTMB(r.mand ~  arid + Microsite  + cwm.site + (1|Site), data = pts)
summary(m5)

varcomp(m5)

shapiro.test(resid(m5))
performance(m5)

simulationOutput <- simulateResiduals(fittedModel = m5, plot = F)

residuals(simulationOutput)
plot(simulationOutput)

cor.test(pts$arid, pts$cwm.site)

ggplot(pts, aes(arid, webers)) + geom_smooth(method = "lm")


check_collinearity(m5)
```
### Mandible length
```{r}





```



# Seed removal rates

```{r}

seeds <- mutate(seeds, percent = ((2 - ending.weight)/2))
seeds = seeds %>% mutate(y2 = ifelse(percent == 0, 0.00000000001, ifelse(percent == 1, 0.9999999999, percent)))

seeds = seeds %>% mutate(bin = ifelse(percent == 1, 1, 0))

ggplot(seeds, aes(bin)) + geom_bar()

m2 <- glmmTMB(bin ~ gr.webers+ arid + Size +Microsite + ndvi + mn.gr.abun +  mean.abun + (1|Site/Visit), family=binomial(), seeds)
summary(m2)
glmm.hp(m2)
emmeans(m2,pairwise~ Size*Microsite)




m2 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers  + (1|Site/Visit), family=binomial(), seeds)

m3 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers  + (1|Site) + (1|Visit), family=binomial(), seeds)


m4 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + (1|Site) + (1|Year), family=binomial(), seeds)
summary(m4)

m5 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun  + mean.abun + Year + (1|Site), family=binomial(), seeds)


m6 <- glmmTMB(ending.weight ~ Size + arid + Microsite + ndvi + mn.gr.abun  + mean.abun + Year + (1|Site), seeds)


summary(m6)


summary(m5)






glmm.hp(m5)
performance(m5)
AIC(m4, m5)
summary(m4)




unique(seeds$Year)
AIC(m2, m3)
AIC(m2, m4)
AIC(m2, m3, m4)

summary(m3)




m2.1 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers + (1|Site), family=binomial(), seeds)
AIC(m2, m2.1, m2.2)

m2.2 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers + Year + (1|Site/Visit), family=binomial(), seeds)
                
sim <- simulateResiduals(m2)
plot(sim)


m2 <- glmmTMB(y2 ~ Size + arid+Microsite  + ndvi + mn.gr.abun + Year + mean.abun + (1|Site/Visit), family=beta_family(), seeds)


m3 <- glmmTMB(y2 ~ Size + arid+Microsite  + ndvi + mn.gr.abun + Year + (1|Site), seeds)

AIC(m2, m3)

sim <- simulateResiduals(m2, quantreg = F)
testUniformity(sim)
plot(sim)
summary(m2)





m3 <- glmmTMB(percent ~ Size + arid +Microsite  + ndvi + mn.gr.abun + Year + (1|Site/Visit), seeds)



check_overdispersion(m2)

summary(m2)

shapiro.test(resid(m2))

sim <- simulateResiduals(m3, quantreg = TRUE)
plot(sim)

m2 <- glmmTMB(ending.weight ~ Size + Site*Microsite  + ndvi + mn.gr.abun, seeds)
summary(m2)


te <- emtrends(m2, ~ Microsite*Site, var = "arid")
test(te)

glmm.hp(m2)


ggplot(seeds, aes(arid, ending.weight, fill = Microsite)) + geom_smooth(method = "lm") 

ggplot(seeds, aes(ending.weight, color = Site, fill = Microsite)) + geom_boxplot()

m3 <- glmmTMB(ending.weight ~ Size + Microsite  + mn.gr.abun + arid + (1|Site), seeds)

summary(m3)
emmeans(m3, pairwise ~ Size)

m3 <- glmmTMB(ending.weight ~ Size + mean.abun + Microsite + mn.gr.abun + (1|Site), seeds)
summary(m3)

m4 <- glmmTMB(ending.weight ~ Size + ndvi + Microsite + mn.gr.abun + (1|Site), seeds)

AIC(m2, m4)

AIC(m2, m3, m4)
summary(m2)


model <- psem(
  glmmTMB(ending.weight ~ ndvi +  arid  + gr.webers  + mn.gr.abun  + (1|Site), seeds),
  glmmTMB(mn.gr.abun~  ndvi + arid + (1|Site), seeds),
  glmmTMB(gr.webers~  ndvi + arid + (1|Site), seeds), seeds,
  glmmTMB(ndvi~ arid, site.env)
)

plot(model)
summary(model)

glmm.hp(m3)

ggplot(seeds, aes(mn.abun.ants, gr.webers)) + geom_smooth(method = "lm")

ggplot(seeds, aes(mn.abun.ants, ending.weight)) + geom_smooth(method = "lm")
ggplot(seeds, aes(mn.gr.abun, ending.weight)) + geom_smooth(method = "lm")

ggplot(seeds, aes(gr.webers, ending.weight)) + geom_smooth(method = "lm")

ggplot(seeds, aes(arid, ending.weight)) + geom_smooth(method = "lm")


ggplot(seeds, aes(ndvi, ending.weight)) + geom_smooth(method = "lm")

ggplot(seeds, aes(arid, mn.abun.ants)) + geom_smooth(method = "lm")



car::Anova(m2)


m2 <- glmmTMB(abun ~   + mean.abun +  (1|Site), family = "nbinom2", pts2)
summary(m2)

sds <- left_join(seeds, plt.ag, by = c("Site", "Year", "Microsite" = "Microsite.x", "Rep"))

sds <- filter(sds, Season.x == "spring")

m2 <- glmmTMB(percent ~ Size + ndvi + Microsite +  arid  + webers  + mn.abun.ants  + (1|Site), family = "poisson", seeds)
summary(m2)

performance(m2)

m3 <- glmmTMB(percent ~ Size + ndvi + Microsite +  arid  + mean.abun.x + (1|Site), seeds)
summary(m3)
performance(m3)

m4 <- glmmTMB(percent ~ Size +  arid +  mn.abun.ants  + ndvi + webers +  Visit + Year + (1|Site), family = "beta_family", seeds)
summary(m4)
shapiro.test(resid(m4))


simulateResiduals(m4, n = 100, plot = TRUE)

check_distribution(m4)

check_overdispersion(m4)
car::Anova(m4)
performance(m4)



performance(m3)
performance(m2)

cor.test(seeds$ndvi, seeds$mean.abun.x)

library(piecewiseSEM)

model <- psem(
  glmmTMB(percent ~ ndvi +  arid  + webers  + mn.abun.ants  + (1|Site), seeds),
  glmmTMB(mn.abun.ants~  ndvi + arid + (1|Site), seeds),
  glmmTMB(webers~  ndvi + arid + (1|Site), seeds), seeds
)


ggplot(seeds, aes(webers, percent)) + geom_smooth()
ggplot(seeds, aes(r.mand, percent)) + geom_smooth()

ggplot(seeds, aes(arid, webers)) + geom_smooth(method = "lm")




cor.test(seeds$webers, seeds$r.mand)
cor.test(seeds$webers, seeds$mn.abun.ants)
cor.test(seeds$r.mand, seeds$mn.abun.ants)
summary(model)
plot(model)
car::Anova(m2)
```



## Viz and models

```{r}

ggplot(plt.ag, aes(Site.x, abun, fill = Microsite.x)) + geom_boxplot()
ggplot(plt.ag, aes(Site.x, rich, fill = Microsite.x, color = as.factor(year))) + geom_boxplot()

ggplot(plt.ag, aes(Microsite.x, abun)) + geom_boxplot()
```
