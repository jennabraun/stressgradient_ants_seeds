---
title: "Data"
format: html
editor: visual
---

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)
library(performance)
library(glmmTMB)
library(emmeans)
library(vegan)
library(FD)
library(sf)
library(DHARMa)
library(glmm.hp)
```

## Site information

```{r}

sites <- read.csv("Raw Data/sites.csv")
sites <- st_as_sf(sites, coords=c("Long","Lat"), crs=4326)
# plot(sites)
# st_write(sites, "studysites.shp")
# 
# #read in bioclim data from other repo
env <- terra::rast("F:/CH2_ant-plant_mutualism_synthesis/na_rasters.grd")

#MAP and MAT from Worldclim 
climsites <- terra::extract(env, sites)
sites <- cbind(climsites, sites)
sites <- select(sites, 2, 5, 21:25)
#clean up NDVI values

sites <- rename(sites, MAT = wc2.1_30s_bio_1, MAP = wc2.1_30s_bio_12)
sites <- select(sites, 1:3, 5, 7)
sites <- unique(sites)


ndvi <- read.csv("Raw Data/NDVI.csv")
ndvi$NDVI20231[is.na(ndvi$NDVI20231)] <- 0
ndvi$NDVI20241[is.na(ndvi$NDVI20241)] <- 0
ndvi <- mutate(ndvi, ndvi = NDVI20231 + NDVI20241)
ndvi <- select(ndvi, 1:3, 8)
ndvi <- left_join(ndvi, sites, by = c("Site", "Year"))
```

## Annual abundance and richness

```{r}

plts <- read.csv("Raw Data/annuals/allplants_IDed.csv")
plts <- dplyr::select(plts, -X)
plts <- dplyr::select(plts, -6)

#not an annual
plts <- filter(plts, species != "Ambrosia.salsola")
str(plts)



plt_wide <- plts %>% pivot_wider(names_from = species, values_from = abun)



unique(plt_wide$Year.NA)
unique(plt_wide$Rep.NA)
unique(plt_wide$Site)
unique(plt_wide$Microsite)

plt_wide$uniID <- paste(plt_wide$Site, plt_wide$Year.NA, plt_wide$Microsite, plt_wide$Rep.NA)
plt_wide$uniID <- gsub(" ", "", plt_wide$uniID)

plt_wide[is.na(plt_wide)] <- 0


env <- dplyr::select(plt_wide, 1:5, uniID)
comm <- dplyr::select(plt_wide, 6:90)

richness <- specnumber(comm)
abun <- rowSums(comm)

env$rich <- richness
env$abun <- abun

#import plant metadata for zero rows
reps <- read.csv("Raw Data/reps.csv")
reps <- filter(reps, season == "spring")
reps$uniID <- paste(reps$Site, reps$year, reps$Microsite, reps$Rep)
reps$uniID <- gsub(" ", "", reps$uniID)
plt.ag <- left_join(reps, env, by = "uniID")

plt.ag$rich[is.na(plt.ag$rich)] <- 0
plt.ag$abun[is.na(plt.ag$abun)] <- 0





plt.ag <- rename(plt.ag, Site = Site.x, Year = year)
plt.ag$Year <- as.factor(plt.ag$Year)
ndvi$Year <- as.factor(ndvi$Year)
plt.ag <- left_join(plt.ag, ndvi, by = c("Site", "Year"))

precip <- read.csv("Raw Data/winterprecip_compiled.csv")
precip$Year <- as.factor(precip$Year)


plt.ag <- left_join(plt.ag, precip, by = c("Site", "Year"))
plt.ag <- filter(plt.ag, Season == "spring")


#remove doubled rows
plt.ag <- unique(plt.ag)

#attach provence for invasive/native info

prov <- read.csv("Raw Data/plantprov.csv")
plts <- left_join(plts, prov, by = "species")

prov.ag <- plts %>% group_by(Year.NA, Rep.NA, Site, Microsite, prov) %>% summarise(prov.abun = sum(abun)) %>% ungroup()
str(prov.ag)
prov.ag <- filter(prov.ag, prov !="") %>% pivot_wider(names_from = prov, values_from = prov.abun)
prov.ag[is.na(prov.ag )] <- 0


plt.ag <- select(plt.ag, 1:6, 10, 16:20)
prov.ag$Year.NA <- as.factor(prov.ag$Year.NA)
plt.ag <- left_join(plt.ag, prov.ag, by = c("Year" = "Year.NA", "Site", "Microsite.x" = "Microsite", "Rep" = "Rep.NA"))

plt.ag$invasive[is.na(plt.ag$invasive)] <- 0
plt.ag$native[is.na(plt.ag$native)] <- 0


#mean plants

mn.plt <- plt.ag %>% group_by(Site, Year) %>% summarise(mean.abun = mean(abun), mean.rich = mean(rich), mean.inv = mean(invasive), mean.native = mean(native))

```

##CWM Seeds

```{r}

#read in plant traits

ptraits <- read.csv("clean data/annuallist.csv")
ptraits <- filter(ptraits, species != "Ambrosia.salsola")
ptraits <- dplyr::select(ptraits, 1, 4)


# determine trait coverage by abundance
byspecies <- plt_wide[6:90] %>% colSums()
byspecies <- as.data.frame(byspecies)
byspecies$species <- row.names(byspecies)

sum(byspecies$byspecies)

tr <- left_join(ptraits, byspecies, by = "species")
sum(tr$byspecies, na.rm = TRUE)

tr_filter <- filter(tr, seed.weight >= 0)
sum(tr_filter$byspecies, na.rm = TRUE)

#microsite level CWM

library(FD)
comm <- plt_wide[6:91]

comm <- rename(comm, Ditaxis.lanceolata = Ditaxis.serrata)

row.names(comm) <- comm$uniID
#comm <- dplyr::select(comm, -uniID)
comm <- comm%>%filter(rowSums(across(where(is.numeric)))!=0)


row.names(ptraits) <- ptraits$species
ptraits <- dplyr::select(ptraits, seed.weight)

ptraits <- filter(ptraits, seed.weight > 0)
names.use <- names(comm)[(names(comm) %in% row.names(ptraits))]
#add the uniID to the name vector
names.use <- append(names.use, "uniID")
df.subset <- comm[, names.use]
df.subset <- df.subset%>%filter(rowSums(across(where(is.numeric)))!=0)
sampleIDs <- df.subset$uniID
df.subset <- dplyr::select(df.subset, -uniID)

func.seeds <- dbFD(ptraits, df.subset, w.abun = TRUE)

df.subset$cwm.seedweight <- func.seeds$CWM
df.subset$uniID <- sampleIDs

cwm <- cbind(df.subset$uniID, df.subset$cwm.seedweight)
cwm <- rename(cwm, uniID = 'df.subset$uniID')
#join to larger dataframe

env <- left_join(env, cwm, by = "uniID")

#microsite level by provence

#make a vector of each set of species by provence
prov <- filter(prov, species != "Ambrosia.salsola")

inv <- filter(prov, prov == "invasive")
nat <- filter(prov, prov == "native")

invnames <- inv$species
ptraits.inv <- filter(ptraits, row.names(ptraits) %in% invnames)
invnames <- append(invnames, "uniID")

df.subset <- comm[, names.use]
df.subset.inv <- df.subset
df.inv <- df.subset.inv[, invnames]
df.inv <- df.inv%>%filter(rowSums(across(where(is.numeric)))!=0)



uniID <- df.inv$uniID
df.inv <- select(df.inv, -uniID)
row.names(df.inv) <- uniID
#site levels by species

func.inv <- dbFD(ptraits.inv, df.inv, w.abun = TRUE)
cwm.inv <- func.inv$CWM
cwm.inv$uniID <- uniID
cwm.inv <- rename(cwm.inv, cwm.inv = seed.weight)


#natives
natnames <- nat$species
ptraits.nat <- filter(ptraits, row.names(ptraits) %in% natnames)

natnames <- append(natnames, "uniID")
print(natnames)
df.subset <- comm[, natnames]
df.subset.nat <- df.subset


natnames <- natnames[(natnames %in% row.names(ptraits))]
natnames <- append(natnames, "uniID")
df.nat <- df.subset.nat[, natnames]
df.nat <- df.nat%>%filter(rowSums(across(where(is.numeric)))!=0)



uniID <- df.nat$uniID
df.nat <- select(df.nat, -uniID)
row.names(df.nat) <- uniID
#site levels by species

func.nat <- dbFD(ptraits.nat, df.nat, w.abun = TRUE)

cwm.nat <- func.nat$CWM
cwm.nat$uniID <- uniID
cwm.nat <- rename(cwm.nat, nat.cwm = seed.weight)

#cwm to main dataset

plt.ag <- left_join(plt.ag, cwm, by = "uniID")

plt.ag <- left_join(plt.ag, cwm.inv, by = "uniID")

plt.ag <- left_join(plt.ag, cwm.nat, by = "uniID")




#site level by species
comm.site <- plt_wide %>% group_by(Site, Year.NA) %>% summarise(across(where(is.numeric), sum))
comm.site <- rename(comm.site, Ditaxis.lanceolata = Ditaxis.serrata)

uniID <- paste(comm.site$Site, comm.site$Year.NA)
comm.site <- select(comm.site, 4:88)
row.names(comm.site) <- uniID

names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits))]
#no zero rows at site level
df.subset <- comm.site[, names.use]

func.site <- dbFD(ptraits, df.subset, w.abun = TRUE)





#Site levels by provenance
names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits.inv))]
#no zero rows at site level
df.subset.inv <- comm.site[, names.use]

func.site.inv <- dbFD(ptraits.inv, df.subset.inv, w.abun = TRUE)


names.use <- names(comm.site)[(names(comm.site) %in% row.names(ptraits.nat))]
#no zero rows at site level
df.subset.nat <- comm.site[, names.use]

func.site.nat <- dbFD(ptraits.nat, df.subset.nat, w.abun = TRUE)


#join all the site levels to the other plant site level
cwm.site <- func.site$CWM
cwm.site <- rename(cwm.site, cwm.site = seed.weight)

cwm.site.inv <- func.site.inv$CWM
cwm.site.inv <- rename(cwm.site.inv, cwm.site.inv = seed.weight)

cwm.site.nat <- func.site.nat$CWM
cwm.site.nat <- rename(cwm.site.nat, cwm.site.nat = seed.weight)


mn.plt <- cbind(mn.plt, cwm.site, cwm.site.inv, cwm.site.nat)

```

## Seed Removal

```{r}
seed2023 <- read.csv("Raw Data/seedrates2023.csv")
#526 put out
seed2023 <- filter(seed2023, ending.weight != "disturbed")
seed2023 <- filter(seed2023, ending.weight != "broken")
seed2023 <- filter(seed2023, ending.weight != "was never put out")

seed2023 <- dplyr::select(seed2023, 1:7)

seed2024 <- read.csv("Raw Data/seedsrates2024.csv")
seed2024 <- filter(seed2024, ending.weight != "disturbed")
seed2024 <- filter(seed2024, ending.weight != "not put out" & ending.weight != "never put out")
seed2024$Site <- gsub("yucca", "HOM", seed2024$Site)

seeds <- rbind(seed2023, seed2024)
seeds$ending.weight <- as.numeric(seeds$ending.weight)




unique(seeds$Size)
seeds$Size <- gsub(" ", "", seeds$Size)
seeds$Size <- gsub("medium", "med", seeds$Size)
seeds$Year <- as.factor(seeds$Year)

seeds$Site <- gsub(" ", "", seeds$Site)

ndvi$Year <- as.factor(ndvi$Year)
ndvi <- unique(ndvi)
ndvi <- filter(ndvi, Season == "spring")

seeds$Site <- gsub("YuccaGrove", "Yucca", seeds$Site)
seeds$Site <- gsub("Cuyama1", "Cuyama 1", seeds$Site)
seeds$Site <- gsub("Cuyama2", "Cuyama 2", seeds$Site)

seeds <- left_join(seeds, ndvi, by = c("Site", "Year"))
seeds <- unique(seeds)


seeds <- left_join(seeds, precip, by = c("Site", "Year"))


```

# Ant Abundance and Richness - pitfall trap level

```{r}
arth2 <- read.csv("Raw Data/pitfall_arth.csv")
ants <- dplyr::filter(arth2, Family == "Formicidae")
sum(ants$count)

unique(ants$Site)
unique(ants$Year)
ants <- filter(ants, Species != "alate")
ants <- filter(ants, Species != "alata")
ants <- filter(ants, Species != "damaged")
ants <- filter(ants, Genus != "damaged")
ants <- filter(ants, Species != "alate/queen")	
ants$Genus <- gsub(" ", "", ants$Genus)

sp <- ants %>% group_by(Genus, Species) %>% summarize(sum(count))

write.csv(sp, "clean Data/ants_species.csv")
write.csv(ants, "clean Data/ants_only.csv")

ants <- dplyr::select(ants, 1:5, 11)

#make wide
str(ants)
ants <- ants %>% group_by(Year, Season, Site, label, Species) %>% summarize(abun = sum(count))
ants_wide <- pivot_wider(ants, names_from = Species, values_from = abun)

ants_wide[is.na(ants_wide)] <- 0

envants <- dplyr::select(ants_wide, 1:4)
commants <- ants_wide %>% ungroup() %>% dplyr::select(5:29)


richness <- specnumber(commants)
abun <- rowSums(commants)

envants$rich <- richness
envants$abun <- abun

envants <- envants %>% separate(label, into = c("Microsite", "rep"), sep = 1)

envants$Microsite <- gsub("S", "shrub", envants$Microsite)
envants$Microsite <- gsub("O", "open", envants$Microsite)
envants$Year <- as.factor(envants$Year)


#need empty pitfalls to fill in zeroes

reps <- read.csv("Raw Data/reps.csv")
pitsreps <- filter(reps, Pit == "y")
pitsreps$year <- as.factor(pitsreps$year)
pitsreps$Rep <- as.character(pitsreps$Rep)
ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))





ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))

ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))


ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0

reps %>% group_by(Pit) %>% summarise(n())
str(reps)
```

# CWM Ants

```{r}
atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)

unique(atraits$ant.species)
unique(atraits$site)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)

unique(ants$Site)

#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)



tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(65, 5:64)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]


names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]
row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))


#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885

atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names



setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(df)
str(atraits)
rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names
func.ants <- dbFD(atraits, df, w.abun = TRUE)


cwmants <- cbind(tr.names, func.ants$CWM)
cwmants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmants$tr.names)
cwmants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmants$tr.names)
#make the labels match and join back to trap data

cwmants <- separate(cwmants, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")


cwmants <- separate(cwmants, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmants$Microsite <- gsub("S", "shrub", cwmants$Microsite)
cwmants$Microsite <- gsub("O", "open", cwmants$Microsite)

cwmants$Site <- gsub("Cuyama1", "Cuyama 1", cwmants$Site)
cwmants$Site <- gsub("Cuyama2", "Cuyama 2", cwmants$Site)

```

# Granivores only

```{r}


commgran <- ants_wide %>% ungroup() %>% dplyr::select(5:29)

sp <- read.csv("Raw data/ants_species.csv")
sp <- filter(sp, class != "other")
sp <- sp$Species

names.use <- names(commgran)[(names(commgran) %in% sp)]

df.subset <- commgran[, names.use]
commgran <- df.subset

gr.richness <- specnumber(commgran)
gr.abun <- rowSums(commgran)

envants$rich <- richness
envants$abun <- abun
envants$gr.richness <- gr.richness
envants$gr.abun <- gr.abun


#need empty pitfalls to fill in zeroes


ptsreps <- left_join(pitsreps, envants, by = c("Site", "year" = "Year", "season" = "Season", "Microsite", "Rep" = "rep"))





ndvi$Year <- as.factor(ndvi$Year)
ptsreps <- left_join(ptsreps, ndvi, by = c("Site", "year" = "Year"))

ptsreps <- left_join(ptsreps, precip, by = c("Site", "year" = "Year"))


ptsreps$rich[is.na(ptsreps$rich)] <- 0
ptsreps$abun[is.na(ptsreps$abun)] <- 0

ptsreps$gr.richness[is.na(ptsreps$gr.richness)] <- 0
ptsreps$gr.abun[is.na(ptsreps$gr.abun)] <- 0



```

#Granivore Trait Calculations

```{r}


#reorder ants data
tr_wide <- ants
tr <- filter(ants, Species %in% sp)
tr_wide <- tr
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)



tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = pres)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site, tr_wide$label)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(42, 5:41)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]

atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)
atraits <- filter(atraits, ant.species %in% names.use)
atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)


unique(ants$Site)

names.use <- names(tr_wide)[(names(tr_wide) %in% atraits$species.site)]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]
atraits <- atraits[order(atraits$species.site),]

row.names(df) <- tr.names
colnames(df) <- gsub(" ", "", colnames(df))



atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names



setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(df))

rownames(atraits) <- atr.names
atraits <- as.data.frame(atraits)
df <- as.data.frame(df)
str(df)
row.names(df) <- tr.names
rownames(atraits) <- atr.names

func.gran <- dbFD(atraits, df, w.abun = TRUE)



cwmgran <- cbind(tr.names, func.gran$CWM)
cwmgran$tr.names <- gsub("Cuyama 1", "Cuyama1", cwmgran$tr.names)
cwmgran$tr.names <- gsub("Cuyama 2", "Cuyama2", cwmgran$tr.names)
#make the labels match and join back to trap data

cwmgran <- separate(cwmgran, col = 1, into = c("year", "season", "Site", "Label"), sep = " ")


cwmgran <- separate(cwmgran, col = "Label", into = c("Microsite", "Rep"), sep = 1)
cwmgran$Microsite <- gsub("S", "shrub", cwmgran$Microsite)
cwmgran$Microsite <- gsub("O", "open", cwmgran$Microsite)

cwmgran$Site <- gsub("Cuyama1", "Cuyama 1", cwmgran$Site)
cwmgran$Site <- gsub("Cuyama2", "Cuyama 2", cwmgran$Site)

```

# Site level Ant CWM

```{r}


atraits <- read.csv("Raw Data/anttraits.csv")
atraits <- mutate(atraits, r.mand = mandible/webers)


atraits <- atraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

atraits$species.site <- paste(atraits$ant.species, atraits$site)

atraits <- ungroup(atraits) %>% dplyr::select(5, 3, 4)




#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())


#reorder ants data
tr_wide <- ants
tr_wide$species.site <- paste(tr_wide$Species, tr_wide$Site)
tr_wide <- tr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
tr_wide <- dplyr::select(tr_wide, 1:4, 7, 8)


tr_wide <- tr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
tr_wide$Year <- as.factor(tr_wide$Year)
tr_wide <- left_join(tr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))

tr_wide <- mutate(tr_wide, occ = site.total/pit.count)
tr_wide <- select(tr_wide, 1:4, 7)
tr_wide <- pivot_wider(tr_wide, names_from = species.site, values_from = occ)

tr_wide[is.na(tr_wide)] <- 0



tr_wide$ID <- paste(tr_wide$Year, tr_wide$Season, tr_wide$Site)
tr_wide <- tr_wide %>% ungroup() %>% dplyr::select(64, 4:63)

#make a vector of the row names and remove the first value

tr.names <- tr_wide$ID
tr_wide <- tr_wide[,-1]

names(tr_wide) <- gsub(" ", "", names(tr_wide))

names.use <- names(tr_wide)[(names(tr_wide) %in% row.names(atraits$species.site))]
#add the uniID to the name vector
#names.use <- append(names.use, "uniID")
df.subset <- tr_wide[, names.use, drop = FALSE]
df <- df.subset[,order(names.use), drop = FALSE]

atraits <- atraits[order(atraits$species.site),]
tr_wide <- tr_wide[,order(names(tr_wide))]
tr_wide <- select(tr_wide, -LeptothoraxHOM)
row.names(atraits)
names(tr_wide)


#fill in missing C. depilis traits with those from other sites
atraits[4,2] <- 0.4389248
atraits[6,2] <- 0.4389248
atraits[4,3] <- 0.885
atraits[6,3] <- 0.885

atr.names <- atraits$species.site
atr.names <- gsub(" ", "", atr.names)
atraits <- atraits[,2:3]
row.names(atraits) <- atr.names





setdiff(row.names(atraits), colnames(df))
setdiff(colnames(df), row.names(atraits))
identical(row.names(atraits), colnames(tr_wide))
ck <- cbind(row.names(atraits), colnames(df))
rownames(atraits) == colnames(tr_wide)
colnames(tr_wide) == rownames(atraits)

names <- seq(1:59)

names2 <- colnames(tr_wide)

identical(names, names2)

row.names(atraits) <- names
names(tr_wide) <- names


setdiff(names, names2)

#set them to numbers

func.ants.site <- dbFD(atraits, tr_wide, w.abun = TRUE)


# 
# 
# 
# 
# 
# 
cwm.ants <- func.ants.site$CWM
cwm.ants <- cbind(tr.names, cwm.ants)

cwm.ants$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.ants$tr.names)
cwm.ants$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.ants$tr.names)
cwm.ants <- separate(cwm.ants, col = 1, into = c("year", "season", "Site"), sep = " ")

cwm.ants$Site <- gsub("Cuyama1", "Cuyama 1", cwm.ants$Site)
cwm.ants$Site <- gsub("Cuyama2", "Cuyama 2", cwm.ants$Site)

```

#Site level Granv CWM
```{r}
#need to filter out species to just the granivores
gtraits <- read.csv("Raw Data/anttraits.csv")
gtraits <- mutate(gtraits, r.mand = mandible/webers)


gtraits <- gtraits %>% group_by(site, ant.species) %>% summarise(r.mand = mean(r.mand), webers = mean(webers))

gtraits$species.site <- paste(gtraits$ant.species, gtraits$site)
gtraits <- filter(gtraits, ant.species %in% sp)
gtraits <- ungroup(gtraits) %>% dplyr::select(5, 3, 4)




#need the number of good pitfalls, per site, per visit
rps <- ptsreps %>% group_by(year, Site, season) %>% summarise(pit.count = n())


#reorder ants data

tr <- filter(ants, Species %in% sp)
gr_wide <- tr



gr_wide$species.site <- paste(gr_wide$Species, gr_wide$Site)
gr_wide <- gr_wide %>% mutate(pres = ifelse(abun > 0, 1, 0))
gr_wide <- dplyr::select(gr_wide, 1:4, 7, 8)


gr_wide <- gr_wide %>% group_by(Year, Site, Season, species.site) %>% summarise(site.total = sum(pres))
rps$year <- as.factor(rps$year)
gr_wide$Year <- as.factor(gr_wide$Year)
gr_wide <- left_join(gr_wide, rps, by = c("Year" = "year", "Site", "Season" = "season"))

gr_wide <- mutate(gr_wide, occ = site.total/pit.count)
gr_wide <- select(gr_wide, 1:4, 7)
gr_wide <- pivot_wider(gr_wide, names_from = species.site, values_from = occ)

gr_wide[is.na(gr_wide)] <- 0



gr_wide$ID <- paste(gr_wide$Year, gr_wide$Season, gr_wide$Site)
gr_wide <- gr_wide %>% ungroup() %>% dplyr::select(41, 4:40)

#make a vector of the row names and remove the first value

tr.names <- gr_wide$ID
gr_wide <- gr_wide[,-1]

names(gr_wide) <- gsub(" ", "", names(gr_wide))






gtraits <- gtraits[order(gtraits$species.site),]
gr_wide <- gr_wide[,order(names(gr_wide))]
#gr_wide <- select(gr_wide, -LeptothoraxHOM)


atr.names <- gtraits$species.site
atr.names <- gsub(" ", "", atr.names)

row.names(gtraits) <- atr.names

row.names(gtraits)
names(gr_wide)


gtraits <- gtraits[,2:3]



identical(row.names(gtraits), colnames(gr_wide))



names <- seq(1:37)

row.names(gtraits) <- names
names(gr_wide) <- names



#set them to numbers

func.gran.site <- dbFD(gtraits, gr_wide, w.abun = TRUE)


cwm.gran.sites <- func.gran.site$CWM
cwm.gran.sites <- cbind(tr.names, cwm.gran.sites)
#cwm.gran.sites <- cwm.gran.sites[,-2]

cwm.gran.sites$tr.names <- gsub("Cuyama 1", "Cuyama1", cwm.gran.sites$tr.names)
cwm.gran.sites$tr.names <- gsub("Cuyama 2", "Cuyama2", cwm.gran.sites$tr.names)
cwm.gran.sites <- separate(cwm.gran.sites, col = 1, into = c("year", "season", "Site"), sep = " ")

cwm.gran.sites$Site <- gsub("Cuyama1", "Cuyama 1", cwm.gran.sites$Site)
cwm.gran.sites$Site <- gsub("Cuyama2", "Cuyama 2", cwm.gran.sites$Site)


mean(cwm.ants$webers)
mean(cwm.gran.sites$webers)

identical(cwm.ants$webers, cwm.gran.sites$webers)
```
# Mean ant

```{r}

sites <- sites %>% mutate(arid = MAP/(MAT + 10))
sites$Year <- as.factor(sites$Year)
plt.ag <- left_join(plt.ag, sites, by = c("Site", "Year"))

plt.ag <- left_join(plt.ag, precip, by = c("Site", "Year"))



#combine pits into means for adding to the dispersal models
mn.ants <- ptsreps %>% group_by(Site, season, year) %>% summarize(mn.abun.ants = mean(abun), mn.rich.ants = mean(rich), mn.gr.abun = mean(gr.abun), mn.gr.rich = mean(gr.richness))



```

# Combine the datasets

```{r}

#plt.ag is the main plant dataset


plt.ag <- left_join(plt.ag, filter(cwm.ants, season == "spring"), by = c("Site", "Year" = "year"))

plt.ag <- left_join(plt.ag, filter(cwm.gran.sites, season == "spring"), by = c("Site", "Year" = "year"))

plt.ag <- rename(plt.ag, gr.webers = webers.y, gr.rmand = r.mand.y)



##joining up the pitfall trap data


ptsreps <- left_join(ptsreps, cwmants, by = c("year", "Site", "season", "Microsite", "Rep"))
ptsreps <- select(ptsreps, -X, -Season, shrub.species)

pts <- left_join(ptsreps, mn.plt, by = c("year" = "Year", "Site"))
pts <- left_join(pts, cwmgran, by = c("year", "Site", "season", "Microsite", "Rep"))
pts <- rename(pts, gr.webers = webers.y, gr.rmand = r.mand.y)
pts <- pts %>% mutate(arid = MAP/(MAT + 10))


#join plant data
seeds <- select(seeds, -Season)

seeds <- left_join(seeds, mn.plt, by = c("Site", "Year"))

seeds$Visit <- gsub("Spring", "spring", seeds$Visit)
seeds$Visit <- gsub("Summer", "summer", seeds$Visit)


seeds <- left_join(seeds, cwm.ants, by = c("Year" = "year", "Visit" = "season", "Site"))

seeds <- left_join(seeds, cwm.gran.sites, by = c("Year" = "year", "Visit" = "season", "Site"))
seeds <- rename(seeds, gr.webers = webers.y, gr.rmand = r.mand.y)
seeds <- seeds %>% mutate(arid = MAP/(MAT + 10))

#add mean ant abuns
seeds <- seeds %>% left_join(mn.ants, by = c("Site", "Visit"= "season","Year"  ="year"))




#all site level data in one dataframe

site.env <- pts %>% select(1,3,4, 13:17, 20:26, 29)
site.env <- unique(site.env)

site.env <- left_join(site.env, cwm.ants, by = c("year", "season", "Site"))
site.env <- left_join(site.env, cwm.gran.sites, by = c("year", "season", "Site"))
site.env <- rename(site.env, gr.webers = webers.y, gr.rmand = r.mand.y)

site.env <- left_join(site.env, mn.ants, by = c("Site", "season", "year"))

```



#Heat map for site
```{r}
library(corrplot)

M <- select(site.env, 4:6, 8:20)
M = cor(M)
corrplot(M, method = "color", addCoef.col = 'black', tl.cex = 0.75)

N <- select(site.env, 4:6, 8:24)
N <- drop_na(N)
N <- cor(N)

corrplot(N, method = "color", addCoef.col = 'black', tl.cex = 0.75)



ggplot(site.env, aes(arid, mn.abun.ants)) + geom_smooth(method = "lm")

```

```{r}

group_by(prov, prov) %>% count()

sum(prov.ag$invasive)
sum(prov.ag$native)

```

## Plant Models

### Annual Richness
```{r}
m11 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site) + (1|Year), family = "poisson", plt.ag)
summary(m11)
#adding a random effect for year doesn't improve
m1 <- glmmTMB(rich ~  arid + Microsite.x + (1|Site) + (1|Year), family = poisson(), plt.ag)

#adding ndvi does not improve
m2 <- glmmTMB(rich ~  arid * Microsite.x + ndvi + (1|Site), family = poisson(), plt.ag)
summary(m2)
AIC(m1, m2)


#adding the interaction does improve a lot
m1.int <- glmmTMB(rich ~  arid * Microsite.x + (1|Site), family = "poisson", plt.ag)
summary(m1.int)

m1.int2 <- glmmTMB(rich ~  arid * Microsite.x + ndvi + (1|Site), family = "poisson", plt.ag)
summary(m1.int)
AIC(m1.int, m1.int2)
BIC(m1.int, m1.int2)


summary(m1.int)
car::Anova(m1.int)


em <- emtrends(m1.int, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)








```

### Annual Abundance
```{r}
#annual abundance

m2 <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "poisson", plt.ag)
check_overdispersion(m2)
m2.nb <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "nbinom2", plt.ag)
m2.nb1 <- glmmTMB(abun ~  arid + Microsite.x + (1|Site), family = "nbinom1", plt.ag)
m2.int <- glmmTMB(abun ~  arid * Microsite.x + (1|Site), family = "nbinom1", plt.ag)
m2.inb <- glmmTMB(abun ~  arid * Microsite.x + (1|Site), family = "nbinom2", plt.ag)
summary(m2.nb1)
summary(m2.nb)
AIC(m2.nb1, m2.nb)


m2.int <- glmmTMB(abun ~  arid * Microsite.x + ndvi + (1|Site), family = "nbinom1", plt.ag) 
summary(m2.int)

# this model here

m2.int3 <- glmmTMB(abun ~  arid * Microsite.x + ndvi * Microsite.x + (1|Site), family = "nbinom1", plt.ag) 

m2.int.hp <- glmmTMB(abun ~  arid : Microsite.x + ndvi:  Microsite.x + (1|Site), family = "nbinom1", plt.ag) 

AIC(m2.int, m2.int3)
BIC(m2.int, m2.int3)


g1 <- glmm.hp(m2.int.hp, commonality = TRUE)
plot(g1)
glmm.hp(m2.int.hp)


summary(m2.int3)
car::Anova(m2.int3)

em <- emtrends(m2.int3, "Microsite.x", var = "ndvi")
pairs(em)
summary(em)
test(em)
plot(em)

em <- emtrends(m2.int3, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)




AIC(m2.int, m2.int3)


m2.int2 <- glmmTMB(abun ~  arid * Microsite.x + (1|Site), family = "nbinom1", plt.ag) 

AIC(m2.int, m2.int2, m2.int3)
BIC(m2.int, m2.int2)

summary(m2.int)

ggplot(plt.ag, aes(arid, abun, fill = Microsite.x)) + geom_smooth(method = "lm")

ggplot(plt.ag, aes(ndvi, abun, fill = Microsite.x)) + geom_smooth(method = "lm")

em <- emtrends(m2.int2, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)

```



### Seed size

```{r}

ggplot(plt.ag, aes(seed.weight, cwm.inv)) + geom_smooth()

ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth()

ggplot(plt.ag, aes(seed.weight, nat.cwm)) + geom_smooth(method = "lm")

ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth()

ggplot(plt.ag, aes(cwm.inv, nat.cwm)) + geom_smooth(method = "lm")

cor.test(plt.ag$seed.weight, plt.ag$nat.cwm)
cor.test(plt.ag$seed.weight, plt.ag$cwm.inv)

t.test(plt.ag$native, plt.ag$invasive)




#native seed weights
ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")



m6 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m6)

m7 <- glmmTMB(log(nat.cwm) ~ arid + Microsite.x  + gr.webers + (1|Site), plt.ag)
summary(m7)
car::Anova(m7)

m8 <- glmmTMB(log(nat.cwm) ~ Microsite.x  + arid + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m8)
car::Anova(m8)

AIC(m6, m7, m8)
BIC(m6, m7, m8)


em <- emtrends(m8, "Microsite.x", var = "arid")
pairs(em)
summary(em)
test(em)
plot(em)




#invasives
m8 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + ndvi + (1|Site), plt.ag)
summary(m8)

m9 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers + gr.rmand + (1|Site), plt.ag)
summary(m9)

AIC(m8, m9)
BIC(m8, m9)


m8.2 <- glmmTMB(log(cwm.inv) ~ arid + Microsite.x  + gr.webers  + ndvi + (1|Site), plt.ag)
summary(m8.2)
glmm.hp(m8.2)

car::Anova(m8)
glmm.hp(m8)

ggplot(plt.ag, aes(arid, log(cwm.inv), fill = Microsite.x)) + geom_smooth(method = "lm")






re <- simulateResiduals(m1)
plot(re)

ggplot(plt.ag, aes(arid, log(seed.weight), fill = Microsite.x)) + geom_smooth(method = "lm")


ggplot(plt.ag, aes(arid, log(nat.cwm), fill = Microsite.x)) + geom_smooth(method = "lm")


ggplot(plt.ag, aes(arid, cwm.inv, fill = Microsite.x)) + geom_smooth(method = "lm")


```

## Ant Models

### Ant Viz
```{r}


ggplot(pts, aes(ndvi, gr.abun, fill = Microsite)) + geom_smooth(method = "lm")
ggplot(pts, aes(arid, gr.abun, fill = Microsite)) + geom_smooth(method = "lm")

ggplot(pts, aes(ndvi, gr.richness, fill = Microsite)) + geom_smooth(method = "lm")
ggplot(pts, aes(arid, gr.richness, fill = Microsite)) + geom_smooth(method = "lm")
```



### Gran Richness
```{r}



m2 <- glmmTMB(gr.richness ~ Microsite +arid + (1|Site), family = "poisson", pts)

m3 <- glmmTMB(gr.richness ~ ndvi + Microsite +arid + (1|Site), family = "poisson", pts)

m4 <- glmmTMB(gr.richness ~ ndvi + Microsite +(1|Site), family = "poisson", pts)


AIC(m2, m3, m4)

summary(m3)

m2 <- glmmTMB(gr.richness ~ ndvi +Microsite  * arid + (1|Site), family = "poisson", pts)
summary(m2)

m3 <- glmmTMB(gr.richness ~ ndvi *Microsite + (1|Site), family = "poisson", pts)
summary(m3)


m3 <- glmmTMB(gr.richness ~ ndvi + Microsite +arid + (1|Site), family = "poisson", pts)
summary(m3)
car::Anova(m3)


check_collinearity(m3)

check_overdispersion(m3)

performance(m3)

glmm.hp(m3)
glmm.hp(m3, commonality = TRUE)




```
### Gran abundance

```{r}

m2.1 <- glmmTMB(abun ~ arid+ Microsite   + (1|Site), family = "poisson", pts)

m3.nb <- glmmTMB(gr.abun ~  arid + Microsite  + ndvi +(1|Site), family = "nbinom2", pts)

m3.nb1 <- glmmTMB(gr.abun ~ arid + Microsite  + ndvi +(1|Site) + (1|year), family = "nbinom2", pts)

AIC(m3.nb, m3.nb1)

#no improvement with year

m4.nb1 <- glmmTMB(gr.abun ~ arid + Microsite  + ndvi +(1|Site), family = "nbinom1", pts)
m4.nb2 <- glmmTMB(gr.abun ~ arid + Microsite  + ndvi +(1|Site), family = "nbinom2", pts)

AIC(m4.nb1, m4.nb2)



m4.int <- glmmTMB(gr.abun ~ arid * Microsite  + ndvi +(1|Site), family = "nbinom1", pts)
summary(m4.int)

m4.int2 <- glmmTMB(gr.abun ~ arid + Microsite  * ndvi +(1|Site), family = "nbinom1", pts)
summary(m4.int2)

em <- emtrends(m4.int, ~Microsite, var = "arid")
test(em)
pairs(em)

glmm.hp(m4.nb1)
glmm.hp(m4.nb1, commonality = TRUE)
performance(m4.nb1)
summary(m4.nb1)
car::Anova(m4.nb1)


```

### Webers

```{r}

cor.test(pts$gr.abun, pts$gr.webers)
cor.test(site.env$mn.gr.abun, site.env$gr.webers)

m5 <- glmmTMB(gr.webers ~ cwm.site.nat + cwm.site.inv + arid + Microsite  + (1|Site), data = pts)
summary(m5)


m5.1 <- glmmTMB(gr.webers ~ cwm.site.nat + cwm.site.inv + arid * Microsite  + (1|Site), data = pts)
  
summary(m5.1)  
  

m6 <- glmmTMB(gr.webers ~ cwm.site + arid + Microsite + ndvi + (1|Site), data = pts)



m7 <- glmmTMB(gr.webers ~ cwm.site + arid + Microsite + (1|Site), data = pts)
AIC(m6, m7)
BIC(m6, m7)
gwebers <- glmm.hp(m7, commonality = TRUE)
#model without NDVI is better


summary(m7)
car::Anova(m7)



```
### Mandible length
```{r}

m9 <- glmmTMB(gr.rmand ~cwm.site.nat*arid + cwm.site.inv + arid + Microsite  + (1|Site), data = pts)
summary(m9)

m9 <- glmmTMB(gr.rmand ~cwm.site + arid + Microsite  + ndvi + (1|Site), data = pts)
m10 <- glmmTMB(gr.rmand ~cwm.site + arid + Microsite   + (1|Site), data = pts)
AIC(m9, m10)

summary(m10)
car::Anova(m10)

m10 <- glmmTMB(gr.rmand ~cwm.site.inv + cwm.site.nat + arid + Microsite   + (1|Site), data = pts)
summary(m10)
```



# Seed removal rates

```{r}

seeds <- mutate(seeds, percent = (2 -ending.weight)/0.02)






m7 <- glmmTMB(percent ~ Size + Microsite + ndvi  + mn.gr.abun+ gr.webers+ (1|Year) + (1|Site), seeds)


m8 <- glmmTMB(percent ~ Size + Microsite + ndvi  +  gr.webers + arid + (1|Year) + (1|Site), seeds)

m9 <- glmmTMB(percent ~ Size + Microsite  + mn.gr.abun+ ndvi + (1|Site), seeds)
glmm.hp(m9)

#m10 <- glmmTMB(percent ~ Size + Microsite + ndvi+ mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
# no convergence
m11 <- glmmTMB(percent ~ Size + Microsite + ndvi + mn.gr.abun +(1|Site), seeds)
AIC(m11)

summary(m11)


m12 <- glmmTMB(percent ~ Size + Microsite + mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
summary(m12)


AIC(m11, m12)

#keeping year because it improves a teeny bit

#m11.int <- glmmTMB(percent ~ Size*ndvi + Microsite + mn.gr.abun +(1|Year) + (1|Site), seeds)

#summary(m11.int)
#all NA convergence


m11.int <- glmmTMB(percent ~  ndvi + Microsite +Size * mn.gr.abun*cwm.site + arid +  (1|Year) + (1|Site), seeds)

summary(m11.int)

#models with CWM sizes as interactions


m11.1 <- glmmTMB(percent ~  ndvi + Microsite +Size* gr.rmand + mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
summary(m11.1)

m11.2 <- glmmTMB(percent ~  ndvi + Microsite +Size* gr.webers + mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
summary(m11.2)




m11.4 <- glmmTMB(percent ~  ndvi*Size + Microsite + mn.gr.abun + arid  +(1|Year) + (1|Site), seeds)
summary(m11.4)

m11.5 <- glmmTMB(percent ~  ndvi +Size * Microsite + mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
summary(m11.5)

#m11.6 <- glmmTMB(percent ~  ndvi + Microsite + mn.gr.abun + Size *arid + (1|Year) + (1|Site), seeds)
#summary(m11.6)
#causes warnings

m11.3 <- glmmTMB(percent ~  ndvi + Microsite +Size* cwm.site + mn.gr.abun + arid + (1|Year) + (1|Site), seeds)
summary(m11.3)

#seed size is significant

m11.7 <- glmmTMB(percent ~  ndvi + Microsite + mn.gr.abun :Size + arid + cwm.site + (1|Year) + (1|Site), seeds)
summary(m11.7)

glmm.hp(m11.7)

#both abundance and cwm.site are significant interactions, but cwm becomes insignificant when included alongside abundance

m11.8 <- glmmTMB(percent ~  Microsite + mn.gr.abun * Size + arid + cwm.site*Size + (1|Year) + (1|Site), seeds)
summary(m11.8)



AIC(m11.3, m11.7, m11.8)
m11.7 <- glmmTMB(percent ~  Microsite + mn.gr.abun:Size + arid +(1|Site), seeds)
glmm.hp(m11.7)
m11.8 <- glmmTMB(percent ~  Microsite + mn.gr.abun:Size + ndvi +(1|Site), seeds)
glmm.hp(m11.8)
m11.9 <- glmmTMB(percent ~  Microsite + mn.gr.abun:Size + arid + ndvi +(1|Site), seeds)
glmm.hp(m11.9)

AIC(m11.7, m11.8, m11.9)
BIC(m11.7, m11.8, m11.9)

summary(m11.9)
car::Anova(m11.9)
glmm.hp(m11.9)


m11.8 <- glmmTMB(percent ~  Microsite + mn.gr.abun*Size + ndvi +(1|Site), seeds)
summary(m11.8)
car::Anova(m11.8)


mseeds <- glmmTMB(percent ~Microsite + mn.gr.abun:Size + ndvi  + arid + (1|Site), seeds)
glmm.hp(mseeds)
g1 <- glmm.hp(mseeds, commonality = TRUE)
plot(g1)
m11.1 <- glmmTMB(percent ~Microsite + mn.gr.abun*Size + ndvi  + gr.webers + (1|Site), seeds)
summary(m11.1)

m11.2 <- glmmTMB(percent ~Microsite + mn.gr.abun:Size + arid  + gr.webers + (1|Site), seeds)
glmm.hp(m11.2)

AIC(m11.1, m11.2)
BIC(m11.1, m11.2, m11.9)
em <-emtrends(m11.9, ~"Size", var= "mn.gr.abun")


pairs(em)
summary(em)
test(em)
plot(em)

ggplot(seeds, aes(mn.gr.abun, percent, fill = Size)) + geom_smooth(method = "lm")

ggplot(seeds, aes(ndvi, percent)) + geom_smooth(method = "lm")

ggplot(seeds, aes(arid, percent, fill = Size)) + geom_smooth(method = "lm")

ggplot(seeds, aes(mn.abun.ants, gr.webers)) + geom_smooth(method = "lm")

ggplot(seeds, aes(mn.abun.ants, percent)) + geom_smooth(method = "lm")
ggplot(seeds, aes(mn.gr.abun, percent)) + geom_smooth(method = "lm")

ggplot(seeds, aes(gr.webers, percent)) + geom_smooth(method = "lm")

ggplot(seeds, aes(arid, percent)) + geom_smooth(method = "lm")


ggplot(seeds, aes(ndvi, percent)) + geom_smooth(method = "lm")

ggplot(seeds, aes(arid, mn.abun.ants)) + geom_smooth(method = "lm")



```

# Seed Removal Figures
```{r}

seeds$Size <- factor(seeds$Size, levels = c("small", "med", "large"))

a<-ggplot(seeds, aes(mn.abun.ants, percent))+ stat_smooth(data = filter(seeds, Size == "small"), aes(color = Size), method = "lm", linetype = "dashed", se = FALSE) +  stat_smooth(data = filter(seeds, Size == "med"), aes(color = Size),method = "lm") +  stat_smooth(data = filter(seeds, Size == "large"), aes(color = Size),method = "lm")   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black"))+ xlab("Mean ant abundance") + ylab("Seeds removed (%)") + geom_point(alpha = 0.3, position = "jitter") + guides(color=guide_legend(title="Bait Size", position = "top"))


a


  



b <- ggplot(seeds, aes(ndvi, percent)) + geom_smooth(method = "lm") + xlab("Productivity (NDVI)") + ylab("Seeds removed (%)") + geom_point(alpha = 0.3, position = "jitter") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black"))




plots <- list(a,b)
grobs <- list()
widths <- list()

for (i in 1:length(plots)){
    grobs[[i]] <- ggplotGrob(plots[[i]])
    widths[[i]] <- grobs[[i]]$widths[2:5]
}

maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
     grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}

p <- do.call("grid.arrange", c(grobs, ncol = 1))
p





#
ggplot(test2, aes(PC1, value, color = type)) + geom_point(aes(color = type)) + stat_smooth(data = filter(test2, type == "SES3"), method = "lm") + stat_smooth(data = filter(test2, type == "mpd.obs.z"), method = "lm", linetype = "dashed", se = FALSE) + xlab("PC1") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill = NA), axis.line = element_line(colour = "black")) + ylab("Standardized Effect Size Dispersion") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_manual(values = c( "#DF7861", "#94B49F"), labels = c("Functional", "Phylogenetic")) + theme(legend.position= c(0.8, 0.9)) + theme(legend.title=element_blank()) + theme(text = element_text(size = 13))

```
# Ant Size Figure
```{r}
a <- ggplot(pts, aes(Microsite, gr.webers)) + geom_boxplot() + xlab("Microsite") + ylab("Ant body size (mm)") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + stat_summary(fun = "mean", geom = "point", shape = 23, size = 4, fill = "red", color = "black")

b <- ggplot(pts, aes(arid, gr.webers)) + geom_smooth(method = "lm")  + xlab("DeMartonne's Aridity Index") + ylab("Ant body size (mm)") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)
b
p <- plot(glmm.hp(m7), plot.perc = TRUE)


mod3 <- m7
plot(glmm.hp(mod3,type="R2"))
p <- glmm.hp(mod3,commonality=TRUE)

p[["variables"]] <- c("CWM Seed Size", "Aridity", "Microsite")
plot(p, dig = 2)

p + labs(
  title = "Relative Importance of Predictors in GLMM",
  subtitle = "Based on Hierarchical Partitioning",
  x = "Predictor Variables",
  y = "Individual Effect (Marginal R²)",
  caption = "Source: R's iris dataset"
)

plot(v1, Xnames = NA)
text(0.1, 1, labels = "Environment")

plots <- list(a,b, c)
grobs <- list()
widths <- list()

for (i in 1:length(plots)){
    grobs[[i]] <- ggplotGrob(plots[[i]])
    widths[[i]] <- grobs[[i]]$widths[2:5]
}

maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
     grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}

p <- do.call("grid.arrange", c(grobs, ncol = 1))
p




c <- ggplot(plt.ag, aes(Microsite.x, nat.cwm)) + geom_boxplot() + xlab("Microsite") + ylab("Native Seed size") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + stat_summary(fun = "mean", geom = "point", shape = 23, size = 4, fill = "red", color = "black")


c
d <- ggplot(plt.ag, aes(arid, nat.cwm)) + geom_smooth(method = "lm")  + xlab("DeMartonne's Aridity Index") + ylab("Native Seed Size") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)
d
e <- ggplot(plt.ag, aes(Microsite.x, cwm.inv)) + geom_boxplot() + xlab("Microsite") + ylab("Invasive Seed size") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + stat_summary(fun = "mean", geom = "point", shape = 23, size = 4, fill = "red", color = "black")

f <- ggplot(plt.ag, aes(arid, cwm.inv)) + geom_smooth(method = "lm")  + xlab("DeMartonne's Aridity Index") + ylab("Invasive Seed Size") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)

f

plots <- list(a,c, e, b, d, f)
grobs <- list()
widths <- list()

for (i in 1:length(plots)){
    grobs[[i]] <- ggplotGrob(plots[[i]])
    widths[[i]] <- grobs[[i]]$widths[2:5]
}

maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
     grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}

p <- do.call("grid.arrange", c(grobs, ncol = 3))
p



ggplot(pts, aes(cwm.site, gr.webers)) + geom_smooth(method = "lm") + geom_point()

```



# Abundance and richness figures

```{r}

# shrub needs to be a dashed line with no SE

a <- ggplot(plt.ag, aes(arid, abun, color = Microsite.x)) + stat_smooth(data = filter(plt.ag, Microsite.x == "open"), method = "lm") + stat_smooth(data = filter(plt.ag,, Microsite.x == "shrub"), method = "lm", linetype = "dashed", se = FALSE)+ xlab("DeMartonne's Aridity Index") + ylab("Annual Abundance \n per quadrat") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + guides(fill=guide_legend(title="Microsite")) + geom_point(position = "jitter", alpha = 0.5) + scale_color_manual(values = c( "#DF7861", "#94B49F")) + guides(color=guide_legend(title="Microsite", position = "top"))


a



b <- ggplot(plt.ag, aes(arid, rich, color = Microsite.x)) + geom_smooth(method = "lm") + xlab("DeMartonne's Aridity Index") + ylab("Annual Species Richness \n per quadrat") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + guides(fill=guide_legend(title="Microsite")) + geom_point(position = "jitter", alpha = 0.5) + scale_color_manual(values = c("#DF7861", "#94B49F")) + guides(color=guide_legend(title="Microsite", position = "top"))

b
c <- ggplot(filter(pts, gr.abun < 75), aes(ndvi, gr.abun)) + geom_smooth(method = "lm") + xlab("Productivity (NDVI)") + ylab("Granivorous ant \n abundance per pitfall") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)
c

d <- ggplot(pts, aes(ndvi, gr.richness)) + geom_smooth(method = "lm") + xlab("Productivity (NDVI)") + ylab("Granivorous ant \n richness per pitfall") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)

d

plots <- list(a,c, b, d)
grobs <- list()
widths <- list()

for (i in 1:length(plots)){
    grobs[[i]] <- ggplotGrob(plots[[i]])
    widths[[i]] <- grobs[[i]]$widths[2:5]
}

maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
     grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}

p <- do.call("grid.arrange", c(grobs, ncol = 2))
p


#ndvi for supplemental information

ggplot(plt.ag, aes(ndvi, abun, fill = Microsite.x)) + geom_smooth(method = "lm") + xlab("Productivity (NDVI)") + ylab("Annual Abundance \n per quadrat") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + guides(fill=guide_legend(title="Microsite"))

#arid for the ants

e <- ggplot(filter(pts, gr.abun < 75), aes(ndvi, gr.abun)) + geom_smooth(method = "lm") + xlab("DeMartonne's Aridity Index") + ylab("Granivorous ant \n abundance per pitfall") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)

e
f <- ggplot(pts, aes(arid, gr.richness)) + geom_smooth(method = "lm") + xlab("DeMartonne's Aridity Index") + ylab("Granivorous ant \n richness per pitfall") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), , panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point(position = "jitter", alpha = 0.5)
f


plots <- list(e,f)
grobs <- list()
widths <- list()

for (i in 1:length(plots)){
    grobs[[i]] <- ggplotGrob(plots[[i]])
    widths[[i]] <- grobs[[i]]$widths[2:5]
}

maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
     grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}

p <- do.call("grid.arrange", c(grobs, ncol = 1))
p




```




## Viz and models

```{r}

ggplot(plt.ag, aes(Site.x, abun, fill = Microsite.x)) + geom_boxplot()
ggplot(plt.ag, aes(Site.x, rich, fill = Microsite.x, color = as.factor(year))) + geom_boxplot()

ggplot(plt.ag, aes(Microsite.x, abun)) + geom_boxplot()



seeds <- mutate(seeds, percent = ((2 - percent)/2))
seeds = seeds %>% mutate(y2 = ifelse(percent == 0, 0.00000000001, ifelse(percent == 1, 0.9999999999, percent)))

seeds = seeds %>% mutate(bin = ifelse(percent == 1, 1, 0))

ggplot(seeds, aes(bin)) + geom_bar()

m2 <- glmmTMB(bin ~ gr.webers+ arid + Size +Microsite + ndvi + mn.gr.abun +  mean.abun + (1|Site/Visit), family=binomial(), seeds)
summary(m2)
glmm.hp(m2)
emmeans(m2,pairwise~ Size*Microsite)

m2 <- glmmTMB(bin ~ Size + (1|Site), family=binomial(), seeds)
summary(m2)
glmm.hp(m2)
emmeans(m2,pairwise~ Size)
car::Anova(m2)

m2 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers  + (1|Site/Visit), family=binomial(), seeds)

m3 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + gr.webers  + (1|Site) + (1|Visit), family=binomial(), seeds)


m4 <- glmmTMB(bin ~ Size + arid + Microsite + ndvi + mn.gr.abun + (1|Site) + (1|Year), family=binomial(), seeds)
summary(m4)

m5 <- glmmTMB(bin ~ Size + Microsite + arid + mean.abun  + mn.gr.abun+ (1|Year) + (1|Site), family=binomial(), seeds)
summary(m5)
emmeans(m5, pairwise~ Size|Microsite)


ggplot(seeds, aes(bin, Size, fill = Microsite)) + geom_boxplot()
```
